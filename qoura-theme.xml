<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:version='2' class='v2' expr:lang='data:blog.languageCode' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
<head>
    <meta charset='UTF-8'/>
    <meta content='width=device-width, initial-scale=1.0' name='viewport'/>
    <meta content='yes' name='mobile-web-app-capable'/>
    <meta content='BloForum' name='apple-mobile-web-app-title'/>
    <meta content='#3B82F6' name='theme-color'/>
    
    <title><data:blog.pageTitle/></title>

    <!-- Blogger Meta Description for SEO -->
    <b:if cond='data:blog.metaDescription'>
      <meta expr:content='data:blog.metaDescription' name='description'/>
    <b:else/>
      <meta expr:content='data:blog.pageTitle' name='description'/>
    </b:if>
    
    <!-- Optimized Font & Icon Loading -->
    <link crossorigin='anonymous' href='https://fonts.gstatic.com' rel='preconnect'/>
    <link crossorigin='anonymous' href='https://cdnjs.cloudflare.com' rel='preconnect'/>
    <link as='style' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='preload'/>
    <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' media='print' onload='this.media=&quot;all&quot;; this.onload=null;' rel='stylesheet'/>
    <noscript><link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'/></noscript>
    
    <!-- Schema.org structured data for SEO -->
    <b:if cond='data:view.isSingleItem'>
      <b:loop values='data:posts' var='post'>
        <script type='application/ld+json'>
        {
          &quot;@context&quot;: &quot;https://schema.org&quot;,
          &quot;@type&quot;: &quot;QAPage&quot;,
          &quot;mainEntity&quot;: {
            &quot;@type&quot;: &quot;Question&quot;,
            &quot;name&quot;: &quot;<data:post.title.jsonEscaped/>&quot;,
            &quot;text&quot;: &quot;<data:post.snippet.jsonEscaped/>&quot;,
            &quot;answerCount&quot;: <data:post.numComments/>,
            &quot;dateCreated&quot;: &quot;<data:post.date.iso8601/>&quot;,
            &quot;author&quot;: {
              &quot;@type&quot;: &quot;Person&quot;,
              &quot;name&quot;: &quot;<data:post.author.name.jsonEscaped/>&quot;
            },
            &quot;suggestedAnswer&quot;: [
              <b:loop index='i' values='data:post.comments' var='comment'>
                {
                  &quot;@type&quot;: &quot;Answer&quot;,
                  &quot;text&quot;: &quot;<data:comment.body.jsonEscaped.nohtml/>&quot;,
                  &quot;dateCreated&quot;: &quot;<data:comment.timestamp.iso8601/>&quot;,
                  &quot;url&quot;: &quot;<data:comment.url/>#<data:comment.anchorName/>&quot;,
                  &quot;author&quot;: {
                    &quot;@type&quot;: &quot;Person&quot;,
                    &quot;name&quot;: &quot;<data:comment.author.name.jsonEscaped/>&quot;
                  }
                }<b:if cond='data:i != data:post.comments.size - 1'>,</b:if>
              </b:loop>
            ]
          }
        }
        </script>
      </b:loop>
    <b:else/>
      <script type='application/ld+json'>
      {
        &quot;@context&quot;: &quot;https://schema.org&quot;,
        &quot;@type&quot;: &quot;WebSite&quot;,
        &quot;url&quot;: &quot;<data:blog.url.canonical/>&quot;,
        &quot;name&quot;: &quot;<data:blog.title.jsonEscaped/>&quot;,
        &quot;description&quot;: &quot;<data:blog.metaDescription.jsonEscaped/>&quot;,
        &quot;publisher&quot;: {
          &quot;@type&quot;: &quot;Organization&quot;,
          &quot;name&quot;: &quot;<data:blog.title.jsonEscaped/>&quot;,
          &quot;logo&quot;: {
            &quot;@type&quot;: &quot;ImageObject&quot;,
            &quot;url&quot;: &quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4j-l_aM9GzVw5bFxy6hvLFmOaqH0TCTHweoQ5E2d4gtAon4IhJgifpLJUHiyjPTa9Wim_Uu8DsGeBTmDXHAWCWX0gIrk_3sUxor-Ra1D70c6OiDRmpVYKVNe-9DcNDYXcvBeif40YD_mPvZF35ayvDU5TPZSB5sztoLNBFkKj6Yk4v5_NalP41sct_Rw/s128/no_image.webp&quot;,
            &quot;width&quot;: 128,
            &quot;height&quot;: 128
          }
        },
        &quot;potentialAction&quot;: {
          &quot;@type&quot;: &quot;SearchAction&quot;,
          &quot;target&quot;: &quot;<data:blog.searchUrl/>?q={search_term_string}&quot;,
          &quot;query-input&quot;: &quot;required name=search_term_string&quot;
        }
      }
      </script>
    </b:if>
    
    <b:skin><![CDATA[
        /* Inlined Google Fonts for performance */
        /* latin */
        @font-face{font-family:'Inter';font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD)}
        @font-face{font-family:'Inter';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD)}
        @font-face{font-family:'Inter';font-style:normal;font-weight:500;font-display:swap;src:url(https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD)}
        @font-face{font-family:'Inter';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD)}
        @font-face{font-family:'Inter';font-style:normal;font-weight:700;font-display:swap;src:url(https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD)}
        
        * {
            font-family: 'Inter', sans-serif;
        }
        
        /* Dark mode styles */
        .dark {
            --tw-text-opacity: 1;
            color: rgb(224 224 224 / var(--tw-text-opacity));
            background-color: #121212;
            color: #E0E0E0;
        }
        
        .dark .bg-white {
            background-color: #1E1E1E;
        }

        .dark .text-gray-800 {
            color: #E0E0E0;
        }
        .dark .text-gray-700 {
            color: rgb(209 213 219);
        }
        
        .dark .bg-gray-50 {
            background-color: #1A1A1A;
        }
        
        .dark .border-gray-300,
        .dark .border-b {
            border-color: #333333;
        }
        
        .dark .bg-gray-100 {
            background-color: #2D2D2D;
        }
        
        .dark .text-gray-600 {
            color: #BDBDBD; /* Improved contrast for WCAG */
        }
        
        .dark .hover\:bg-gray-50:hover {
            background-color: #2A2A2A;
        }
        
        .dark .hover\:bg-gray-100:hover {
            background-color: #3A3A3A;
        }
        
        .dark .bg-blue-100 {
            background-color: #1E3A8A;
        }
        
        .dark .text-blue-800 {
            color: #93C5FD;
        }
        
        .dark .hex-pattern {
            background-image: 
                linear-gradient(30deg, #2D2D2D 12%, transparent 12.5%, transparent 87%, #2D2D2D 87.5%, #2D2D2D),
                linear-gradient(150deg, #2D2D2D 12%, transparent 12.5%, transparent 87%, #2D2D2D 87.5%, #2D2D2D),
                linear-gradient(30deg, #2D2D2D 12%, transparent 12.5%, transparent 87%, #2D2D2D 87.5%, #2D2D2D),
                linear-gradient(150deg, #2D2D2D 12%, transparent 12.5%, transparent 87%, #2D2D2D 87.5%, #2D2D2D),
                linear-gradient(60deg, #1E1E1E 25%, transparent 25.5%, transparent 75%, #1E1E1E 75%, #1E1E1E),
                linear-gradient(60deg, #1E1E1E 25%, transparent 25.5%, transparent 75%, #1E1E1E 75%, #1E1E1E);
        }
        
        /* Theme toggle button */
        .theme-toggle {
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border: none;
            cursor: pointer;
            background: transparent;
            font-size: 1.5rem;
            color: inherit;
            border-radius: 50%;
            width: 2.5rem;
            height: 2.5rem;
        }
        
        .theme-toggle:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
        
        .dark .theme-toggle:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        /* Smooth transition for theme change */
        body, .bg-white, .bg-gray-50, .bg-gray-100, .text-gray-800, .text-gray-600 {
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }
        
        /* TV-specific styles */
        @media tv {
            body {
                font-size: 24px;
            }
            
            .container {
                max-width: 90%;
            }
            
            button, .btn {
                padding: 15px 30px;
                font-size: 24px;
            }
            
            h1, h2, h3, h4 {
                font-size: 1.5em;
            }
            
            .tv-hidden {
                display: none;
            }
        }
        
        /* Smart TV navigation support */
        @media screen and (min-width: 1920px) and (min-height: 1080px) {
            .focusable {
                outline: 3px solid transparent;
                transition: outline 0.3s ease;
            }
            
            .focusable:focus {
                outline: 3px solid #3B82F6;
            }
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .hex-pattern {
            background-image: 
                linear-gradient(30deg, #f3f4f6 12%, transparent 12.5%, transparent 87%, #f3f4f6 87.5%, #f3f4f6),
                linear-gradient(150deg, #f3f4f6 12%, transparent 12.5%, transparent 87%, #f3f4f6 87.5%, #f3f4f6),
                linear-gradient(30deg, #f3f4f6 12%, transparent 12.5%, transparent 87%, #f3f4f6 87.5%, #f3f4f6),
                linear-gradient(150deg, #f3f4f6 12%, transparent 12.5%, transparent 87%, #f3f4f6 87.5%, #f3f4f6),
                linear-gradient(60deg, #f9fafb 25%, transparent 25.5%, transparent 75%, #f9fafb 75%, #f9fafb),
                linear-gradient(60deg, #f9fafb 25%, transparent 25.5%, transparent 75%, #f9fafb 75%, #f9fafb);
            background-size: 40px 70px;
            background-position: 0 0, 0 0, 20px 35px, 20px 35px, 0 0, 20px 35px;
        }
        
        .prose {
            max-width: 65ch;
        }

        .category-badge {
            transition: all 0.2s ease;
        }
        
        .category-badge:hover {
            background-color: #3B82F6;
            color: white;
        }
        
        .animate-float {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        /* Reputation Badges */
        .badge {
            display: inline-block;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            margin-right: 5px;
        }
        .badge-bronze { background-color: #cd7f32; color: white; }
        .badge-silver { background-color: #c0c0c0; color: white; }
        .badge-gold { background-color: #ffd700; color: black; }
        .badge-platinum { background-color: #e5e4e2; color: black; }
        .badge-diamond { background-color: #b9f2ff; color: black; }
        
        /* Reactions */
        .reaction-btn {
            background: #f1f5f9;
            border: 1px solid #e2e8f0;
            border-radius: 20px;
            padding: 4px 12px;
            margin-right: 8px;
            cursor: pointer;
            transition: all 0.2s;
        }
        .reaction-btn:hover {
            background: #e2e8f0;
        }
        .reaction-btn.active {
            background: #dbeafe;
            border-color: #3b82f6;
        }
        
        /* Trending tags */
        .trending-tag {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2px 10px;
            border-radius: 15px;
            font-size: 12px;
            margin: 2px;
            display: inline-block;
        }
        
        /* User status indicators */
        .user-status {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }
        .status-online { background-color: #10b981; }
        .status-away { background-color: #f59e0b; }
        .status-offline { background-color: #9ca3af; }
        
        /* Profile popups */
        .profile-popup {
            position: absolute;
            background: white;
            border-radius: 8px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            padding: 15px;
            width: 250px;
            z-index: 100;
            display: none;
        }

        /* Statistics Page */
        .stats-item:hover { background-color: #f9fafb; }
        .dark .stats-item:hover { background-color: #2a2a2a; }

        /* Custom Share Buttons */
        .custom-share-buttons a {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px; /* Increased size for better touch targets */
            height: 40px; /* Increased size for better touch targets */
            border-radius: 50%;
            margin: 0 2px;
            color: #4b5563; /* text-gray-600 */
            background-color: #f3f4f6; /* bg-gray-100 */
            transition: all 0.2s ease;
            font-size: 1rem; /* Increased icon size */
        }
        .custom-share-buttons a:hover {
            transform: translateY(-2px);
            color: #fff;
        }
        .dark .custom-share-buttons a { background-color: #374151; color: #e5e7eb; }
        .share-twitter:hover { background-color: #1DA1F2; }
        .share-whatsapp:hover { background-color: #25D366; }
        .share-telegram:hover { background-color: #0088cc; }
        .share-reddit:hover { background-color: #FF4500; }
        .share-tumblr:hover { background-color: #36465D; }

        /* --- XenForo-style Comment Redesign --- */
        #comments {
            margin-top: 2rem;
            background-color: #fff;
            border-radius: 0.75rem; /* rounded-xl */
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); /* shadow-md */
            padding: 0; /* Padding is now on the title */
        }

        #comments h3.title {
            font-size: 1.25rem; /* text-xl */
            font-weight: 600; /* font-semibold */
            margin: 0;
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb; /* border-gray-200 */
        }
        .comments .comment {
            display: block; /* Reset from flex */
            gap: 0;
            padding: 0; /* Will be handled by inner elements */
            border-top: 1px solid #e5e7eb; /* border-gray-200 */
            overflow: hidden; /* For containing floats or flex items */
        }
        .comments .comment:first-child {
            border-top: none;
        }

        /* The main flex container for the two columns, applied by JS */
        .comment.forum-style-processed {
            display: flex;
            padding: 0;
        }

        /* --- Author Column (Left Side) --- */
        .comment-author-column {
            flex: 0 0 150px; /* Don't grow, don't shrink, base width 150px */
            padding: 1rem;
            text-align: center;
            border-right: 1px solid #e5e7eb;
            background-color: #f9fafb; /* bg-gray-50 */
        }
        .comment-author-column .avatar-image-container {
            margin: 0 auto 0.75rem auto; /* Center it and add margin bottom */
        }
        .comment-author-column .author-avatar {
            width: 64px;
            height: 64px;
            border-radius: 50%;
            margin: 0 auto;
        }
        .comment-author-column .comment-author {
            margin-bottom: 0; /* Reset margin */
            display: block; /* Reset from flex */
        }
        .comment-author-column .comment-author .fn,
        .comment-author-column .comment-author .fn a {
            font-weight: 700; /* font-bold */
            font-size: 0.9rem;
            color: #1f2937;
            text-decoration: none;
            word-wrap: break-word; /* Handle long names */
        }
        .comment-author-column .comment-author .fn a:hover {
            text-decoration: underline;
        }
        .comment-author-column .comment-author .badge {
            display: block;
            margin: 0.5rem auto 0 auto;
            width: fit-content;
        }

        /* --- Content Column (Right Side) --- */
        .comment-content-column {
            flex: 1 1 auto; /* Grow and shrink */
            padding: 1rem 1.5rem;
            display: flex;
            flex-direction: column;
        }
        .comment-content-header {
            font-size: 0.8rem;
            color: #6b7280; /* text-gray-500 */
            margin-bottom: 1rem;
        }
        .comment-content-header .comment-timestamp a {
            color: inherit;
            text-decoration: none;
        }
        .comment-content-header .comment-timestamp a:hover {
            text-decoration: underline;
        }
        .comment-content-column .comment-body {
            flex-grow: 1; /* Make body take up available space */
            font-size: 1rem;
            line-height: 1.7;
            color: #374151;
            margin: 0 0 1rem 0; /* Reset margin */
        }
        .comment-content-column .comment-footer {
            margin: 0; /* Reset margin */
            padding-top: 1rem;
            border-top: 1px solid #f1f5f9;
            display: flex;
            justify-content: flex-end; /* Align actions to the right */
            align-items: center;
            gap: 1rem;
        }
        .comment-footer .comment-timestamp {
            display: none; /* Moved to header */
        }

        /* --- Reply & Action Button Styling --- */
        .comments .comment-actions .comment-reply {
            background-color: transparent;
            padding: 0;
            border-radius: 0;
            font-size: 0.75rem; /* text-xs */
            font-weight: 600; /* font-semibold */
            color: #4b5563; /* text-gray-600 */
            transition: color 0.2s ease;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }
        .comments .comment-actions .comment-reply:hover {
            background-color: transparent;
            color: #1f2937; /* text-gray-800 */
            text-decoration: none;
        }

        /* --- Dark Mode Comment Styling --- */
        .dark #comments {
            background-color: #1E1E1E; /* darkCard */
            box-shadow: none;
            border: 1px solid #333333;
        }
        .dark #comments h3.title, .dark #comments #comment-post-message,
        .dark .comments .comment {
            border-color: #333333; /* darkBorder */
        }
        .dark .comment-author-column {
            border-right-color: #333333;
            background-color: #2a2a2a;
        }
        .dark .comment-author-column .comment-author .fn a { color: #e5e7eb; }
        .dark .comment-content-column .comment-body { color: #d1d5db; }
        .dark .comment-content-header { color: #9ca3af; }
        .dark .comment-content-column .comment-footer { border-top-color: #333333; }
        .dark .comments .comment-actions .comment-reply {
            color: #9ca3af;
        }
        .dark .comments .comment-actions .comment-reply:hover {
            color: #e5e7eb;
        }

        /* --- Best Answer Styling Adjustment --- */
        .comment.best-answer .comment-content-column {
            background-color: #f0fdf4; /* green-50 */
            border-left: 4px solid #22c55e; /* green-500 */
        }
        .dark .comment.best-answer .comment-content-column {
            background-color: rgba(34, 197, 94, 0.1);
            border-left-color: #22c55e;
        }
        .comment.best-answer .comment-author-column {
            background-color: #f0fdf4; /* green-50 */
        }
        .dark .comment.best-answer .comment-author-column {
            background-color: rgba(34, 197, 94, 0.1);
        }

        /* --- Responsive Comment Layout for Mobile --- */
        @media (max-width: 767px) {
            .comment.forum-style-processed {
                flex-direction: column; /* Stack columns vertically */
            }

            .comment-author-column {
                flex-basis: auto; /* Reset fixed width */
                border-right: none; /* Remove vertical separator */
                border-bottom: 1px solid #e5e7eb; /* Add horizontal separator */
                padding: 1rem; /* Adjust padding for more space */
                text-align: left; /* Align content to the left */
                display: flex; /* Use flex for better alignment of avatar and name */
                align-items: center;
                background-color: #fff; /* Match the content background on mobile */
            }

            .comment-author-column .avatar-image-container {
                margin: 0 0.75rem 0 0; /* Adjust margin for flex layout */
            }

            .comment-author-column .author-avatar {
                width: 40px; /* Smaller avatar for mobile */
                height: 40px;
            }

            .comment-author-column .comment-author {
                display: flex;
                flex-direction: column; /* Stack name and badge */
                align-items: flex-start;
            }
            
            .comment-author-column .comment-author .badge {
                margin: 0.25rem 0 0 0; /* Adjust badge margin */
            }

            .dark .comment-author-column {
                border-bottom-color: #333333;
                background-color: #1E1E1E; /* Match dark content background */
            }
        }

        /* --- Comment Form (Post a Reply) Styling [FINAL FIX] --- */
        #comments .comment-form {
            /* This padding is the definitive fix. It creates space around the entire form block. */
            padding: 1.5rem;
            border-top: 1px solid #e5e7eb;
        }
        #comments #comment-post-message {
            font-size: 1.25rem;
            font-weight: 600;
            /* The title no longer needs its own padding, as the parent .comment-form handles it. */
            padding-bottom: 1rem;
            margin-bottom: 1rem;
            border-bottom: 1px solid #e5e7eb;
        }
        .comment-form-message {
            /* This message also benefits from the parent's padding. */
            margin-bottom: 1rem;
            font-size: 0.875rem;
            color: #6b7280;
        }
        .dark #comments .comment-form { border-top-color: #333333; }
        .dark #comments #comment-post-message { border-bottom-color: #333333; }
        .dark .comment-form-message {
            color: #9ca3af;
        }
        
        /* AI Similar Threads */
        #similar-threads-container {
            display: none; /* Hidden by default, shown by JS */
        }
        .dark #similar-threads-container {
            background-color: #2a2a2a;
            border-color: #333333;
        }

        /* Pre-compiled Tailwind CSS */
        *,:after,:before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}
        html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Inter,sans-serif;font-feature-settings:normal;font-variation-settings:normal}body{margin:0;line-height:inherit}h1,h2,h3,h4,p{margin:0}a{color:inherit;text-decoration:inherit}button{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0;text-transform:none;background-color:transparent;background-image:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}button:focus:not(:focus-visible){outline:none}img{display:block;vertical-align:middle;max-width:100%;height:auto}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.bottom-0{bottom:0}.left-0{left:0}.left-3{left:.75rem}.right-0{right:0}.right-2{right:.5rem}.top-0{top:0}.top-3{top:.75rem}.top-full{top:100%}.z-50{z-index:50}.mx-auto{margin-left:auto;margin-right:auto}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-2{margin-left:.5rem}.mr-1{margin-right:.25rem}.mr-2{margin-right:.5rem}.mr-3{margin-right:.75rem}.mr-4{margin-right:1rem}.mt-1{margin-top:.25rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.my-8{margin-top:2rem;margin-bottom:2rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.hidden{display:none}.h-10{height:2.5rem}.h-8{height:2rem}.w-10{width:2.5rem}.w-2{width:.5rem}.w-6{width:1.5rem}.w-8{width:2rem}.w-full{width:100%}.max-w-3xl{max-width:48rem}.max-w-none{max-width:none}.flex-1{flex:1 1 0%}.flex-grow{flex-grow:1}.flex-wrap{flex-wrap:wrap}.cursor-pointer{cursor:pointer}.grid-cols-12{grid-template-columns:repeat(12,minmax(0,1fr))}.col-span-12{grid-column:span 12/span 12}.col-span-2{grid-column:span 2/span 2}.col-span-3{grid-column:span 3/span 3}.col-span-6{grid-column:span 6/span 6}.items-center{align-items:center}.items-start{align-items:flex-start}.justify-center{justify-content:center}.justify-end{justify-content:flex-end}.justify-between{justify-content:space-between}.gap-2{gap:.5rem}.gap-4{gap:1rem}.gap-8{gap:2rem}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.overflow-hidden{overflow:hidden}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-xl{border-radius:.75rem}.border{border-width:1px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-blue-600{--tw-border-opacity:1;border-color:rgb(37 99 235/var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.p-4{padding:1rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.pl-10{padding-left:2.5rem}.pr-4{padding-right:1rem}.pt-6{padding-top:1.5rem}.pt-8{padding-top:2rem}.text-center{text-align:center}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.text-blue-600{--tw-text-opacity:1;color:rgb(37 99 235/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity:1;color:rgb(139 92 246/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.shadow-lg{--tw-shadow:0 10px 15px -3px rgb(0 0 0/.1),0 4px 6px -4px rgb(0 0 0/.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px rgb(0 0 0/.1),0 2px 4px -2px rgb(0 0 0/.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgb(0 0 0/.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.dark .dark\:prose-invert{--tw-prose-body:var(--tw-prose-invert-body);--tw-prose-headings:var(--tw-prose-invert-headings);--tw-prose-lead:var(--tw-prose-invert-lead);--tw-prose-links:var(--tw-prose-invert-links);--tw-prose-bold:var(--tw-prose-invert-bold);--tw-prose-counters:var(--tw-prose-invert-counters);--tw-prose-bullets:var(--tw-prose-invert-bullets);--tw-prose-hr:var(--tw-prose-invert-hr);--tw-prose-quotes:var(--tw-prose-invert-quotes);--tw-prose-quote-borders:var(--tw-prose-invert-quote-borders);--tw-prose-captions:var(--tw-prose-invert-captions);--tw-prose-code:var(--tw-prose-invert-code);--tw-prose-pre-code:var(--tw-prose-invert-pre-code);--tw-prose-pre-bg:var(--tw-prose-invert-pre-bg);--tw-prose-th-borders:var(--tw-prose-invert-th-borders);--tw-prose-td-borders:var(--tw-prose-invert-td-borders)}.hover\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgb(29 78 216/var(--tw-bg-opacity))}.hover\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.hover\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.hover\:bg-green-600:hover{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.hover\:text-blue-600:hover{--tw-text-opacity:1;color:rgb(37 99 235/var(--tw-text-opacity))}.hover\:text-blue-800:hover{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.focus\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgb(59 130 246/var(--tw-border-opacity))}.focus\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-blue-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246/var(--tw-ring-opacity))}@media (min-width:768px){.md\:hidden{display:none}.md\:flex{display:flex}.md\:grid{display:grid}.md\:block{display:block}.md\:col-span-2{grid-column:span 2/span 2}.md\:col-span-3{grid-column:span 3/span 3}.md\:col-span-6{grid-column:span 6/span 6}.md\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.md\:flex-row{flex-direction:row}.md\:items-center{align-items:center}.md\:justify-between{justify-content:space-between}.md\:justify-end{justify-content:flex-end}.md\:space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.md\:mt-0{margin-top:0}.md\:w-auto{width:auto}.md\:text-lg{font-size:1.125rem;line-height:1.75rem}.md\:text-xl{font-size:1.25rem;line-height:1.75rem}.md\:text-2xl{font-size:1.5rem;line-height:2rem}.md\:text-3xl{font-size:1.875rem;line-height:2.25rem}.md\:text-4xl{font-size:2.25rem;line-height:2.5rem}.md\:text-5xl{font-size:3rem;line-height:1}}
    ]]></b:skin>
</head>
<body class='bg-gray-50 text-gray-800'>
    <!-- Theme Info for Layout View -->
    <b:section class='theme-info' id='theme-info' maxwidgets='1' showaddelement='no'>
      <b:widget id='HTML999' locked='true' title='Theme Information (Layout Only)' type='HTML' version='2' visible='true'>
        <b:widget-settings>
          <b:widget-setting name='content'/>
        </b:widget-settings>
        <b:includable id='main'>
          <b:if cond='data:view.isLayoutMode'>
            <div style='text-align:center; margin:15px 0; padding:15px; background-color:#e3f2fd; border:1px solid #bbdefb; color:#1e88e5; font-family: Arial, sans-serif;'>
              <h2 style='margin:0 0 10px; font-size:18px; font-weight:bold;'>BloForum Blogspot Theme v1.0</h2>
              <p style='margin:0; font-size:13px;'>
                Created by: <strong>Rony Priyagodo (Jayabaya Studio)</strong> | License: <strong>Open Source</strong>
              </p>
            </div>
          </b:if>
        </b:includable>
      </b:widget>
    </b:section>
    <!-- Header -->
    <header class='bg-white shadow-md sticky top-0 z-50'>
        <div class='container mx-auto px-4 py-4 flex justify-between items-center'>
            <b:section class='header-logo' id='header-logo' maxwidgets='1' showaddelement='no'>
              <b:widget id='Header1' locked='true' title='Blo Forum (Header)' type='Header' version='2' visible='true'>
                <b:widget-settings>
                  <b:widget-setting name='displayUrl'/>
                  <b:widget-setting name='displayHeight'>0</b:widget-setting>
                  <b:widget-setting name='sectionWidth'>-1</b:widget-setting>
                  <b:widget-setting name='useImage'>false</b:widget-setting>
                  <b:widget-setting name='shrinkToFit'>false</b:widget-setting>
                  <b:widget-setting name='imagePlacement'>BEHIND</b:widget-setting>
                  <b:widget-setting name='displayWidth'>0</b:widget-setting>
                </b:widget-settings>
                <b:includable id='main'>
                        <div class='flex items-center space-x-2'>
                            <a class='flex items-center space-x-2' expr:href='data:blog.homepageUrl'>
                                <div class='w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center focusable'>
                                    <i class='fas fa-hexagon text-white text-xl'/>
                                </div>
                                <h1 class='text-xl md:text-2xl font-bold text-blue-600'>Blo<span class='text-green-700'>Forum</span></h1>
                            </a>
                        </div>
                    </b:includable>
                <b:includable id='behindImageStyle'>
    <b:if cond='data:sourceUrl'>
      <b:include cond='data:this.image' data='{                    image: data:this.image,                    selector: &quot;.header-widget&quot;                  }' name='responsiveImageStyle'/>
      <style type='text/css'>
        .header-widget {
          background-position: <data:blog.locale.languageAlignment/>;
          background-repeat: no-repeat;
          background-size: cover;
        }
      </style>
    </b:if>
  </b:includable>
                <b:includable id='description'>
    <p>
      <data:this.description/>
    </p>
  </b:includable>
                <b:includable id='image'>
    <a class='header-image-wrapper' expr:href='data:blog.homepageUrl'>
      <b:include data='{                                                 image: data:image,                                                 altText: data:blog.title.escaped,                                                 originalWidth: data:width,                                                 originalHeight: data:height                                               }' name='responsiveImage'/>
    </a>
  </b:includable>
                <b:includable id='title'>
    <h1>
      <b:tag cond='data:view.url != data:blog.homepageUrl' expr:href='data:blog.homepageUrl' name='a'>
        <data:title/>
      </b:tag>
    </h1>
  </b:includable>
              </b:widget>
            </b:section>
            
            <b:section class='header-menu' id='header-menu' maxwidgets='1' showaddelement='yes'>
              <b:widget id='LinkList1' locked='false' title='Header Menu' type='LinkList' version='2' visible='true'>
                <b:includable id='main'>
                        <nav class='hidden md:flex md:space-x-8' id='mobileMenu'>
                            <b:loop values='data:links' var='link'>
                                <a class='text-gray-600 hover:text-blue-600 font-medium transition-colors focusable' expr:href='data:link.target'><data:link.name/></a>
                            </b:loop>
                        </nav>
                    </b:includable>
                <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
              </b:widget>
            </b:section>
            
            <div class='flex items-center space-x-4'>
                <!-- Theme Toggle Button -->
                <button aria-label='Toggle dark mode' class='theme-toggle focusable' id='themeToggle'>
                    <i class='fas fa-moon' id='themeIcon'/>
                </button>
                
                <div class='relative'>
                    <button aria-label='View notifications' class='text-gray-600 hover:text-blue-600 relative focusable' id='notification-bell'>
                        <i class='fas fa-bell text-2xl'/>
                        <span class='absolute top-0 right-0 h-2 w-2 bg-red-500 rounded-full hidden' id='notification-count'/>
                    </button>
                </div>
                
                <!-- Generic User/Login Icon -->
                <a class='text-gray-600 hover:text-blue-600 focusable' href='https://www.blogger.com/go/signin' target='_blank' title='Login / Register'>
                    <i class='fas fa-user-circle text-2xl'/>
                </a>
                
                <!-- Mobile Menu Button -->
                <button aria-label='Toggle navigation' class='md:hidden text-gray-600 focusable' id='mobileMenuBtn'>
                    <i class='fas fa-bars text-2xl'/>
                </button>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class='container mx-auto px-4 py-8'>
        <!-- Standalone Search Bar Section -->
        <b:section class='search-bar-section mb-8' id='search-bar-section' maxwidgets='1' showaddelement='no' tag='div'>
          <b:widget id='HTML1' locked='true' title='Search Bar Redesigned' type='HTML' version='2' visible='true'>
            <b:widget-settings>
              <b:widget-setting name='content'><![CDATA[<!-- Search Bar Redesigned for Responsiveness -->
<div class="bg-white shadow-md rounded-xl p-4 dark:bg-gray-800 dark:border dark:border-gray-700">
    <form class="flex flex-col md:flex-row md:items-center gap-4" expr:action='data:blog.searchUrl' method='get'>

        <!-- Search Input -->
        <div class="relative flex items-center flex-grow">
            <i class="fas fa-search absolute left-3 text-gray-400 pointer-events-none"></i>
            <input type="text" name="q" placeholder="Search discussions..." 
                   class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400" />
        </div>

        <!-- Action Buttons -->
        <div class="flex items-center gap-2 flex-shrink-0">
            <!-- Filter Button -->
            <div class="relative flex-grow md:flex-grow-0">
                <button id="filter-btn" type="button" class="w-full whitespace-nowrap text-gray-700 bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded-lg flex items-center justify-center text-sm dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600">
                    <i class="fas fa-filter mr-2"></i>
                    <span>Filters</span>
                </button>
                <div id="filter-dropdown" class="absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 hidden z-50 dark:bg-gray-800 dark:ring-gray-700">
                    <div id="label-list-container" class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="filter-btn">
                        <div class="text-center p-4"><i class="fas fa-spinner fa-spin"></i></div>
                    </div>
                </div>
            </div>
            <!-- New Thread Button -->
            <a id="new-thread-btn" href="#" class="w-full bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center justify-center text-sm">
                <i class="fas fa-plus mr-2"></i>
                <span>New Thread</span>
            </a>
        </div>
    </form>
</div>]]></b:widget-setting>
            </b:widget-settings>
            <b:includable id='main'>
              <b:if cond='data:view.isLayoutMode'>
                <h2 class='title'><data:title/></h2>
              </b:if>
              <div class='widget-content'>
                <data:content/>
              </div>
              <b:include name='quickedit'/>
            </b:includable>
          </b:widget>
        </b:section>

        <!-- Gadget Sections for Static Content -->
        <!-- Add Hero, Search, Categories etc. here from the Layout menu -->
        <b:section class='main-top-widgets' id='main-top-widgets' showaddelement='yes' tag='div'>
          <b:widget id='HTML2' locked='false' title='Hero Banner' type='HTML' version='2' visible='true'>
            <b:widget-settings>
              <b:widget-setting name='content'><![CDATA[<section class="hex-pattern py-16">
    <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl md:text-5xl font-bold mb-4 text-gray-800">Help <span class="text-blue-600">And</span> Experience Community</h2>
        <p class="text-base md:text-xl text-gray-600 max-w-3xl mx-auto mb-6">Connect, share knowledge, and grow with our vibrant community of developers and enthusiasts.</p>
        
        <!-- Redesigned Stats with Responsive Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-8 my-8">
            <div class="text-center">
                <div class="text-2xl md:text-3xl font-bold text-blue-600">12.5K+</div>
                <div class="text-gray-600 dark:text-gray-400">Active Members</div>
            </div>
            <div class="text-center">
                <div class="text-2xl md:text-3xl font-bold text-green-500">45.2K+</div>
                <div class="text-gray-600 dark:text-gray-400">Discussions</div>
            </div>
            <div class="text-center">
                <div class="text-2xl md:text-3xl font-bold text-purple-500">98%</div>
                <div class="text-gray-600 dark:text-gray-400">Satisfaction Rate</div>
            </div>
        </div>
        
        <!-- Redesigned Action Buttons -->
        <div class="flex flex-col sm:flex-row justify-center items-center gap-4">
            <button class="w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors flex items-center justify-center">
                <i class="fas fa-rocket mr-2"></i>Get Started
            </button>
            <button class="w-full sm:w-auto bg-white hover:bg-gray-100 text-blue-600 border border-blue-600 px-6 py-3 rounded-lg font-medium transition-colors flex items-center justify-center dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-600">
                <i class="fas fa-users mr-2"></i>Join Community
            </button>
        </div>
    </div>
</section>]]></b:widget-setting>
            </b:widget-settings>
            <b:includable id='main'>
              <b:if cond='!data:view.isSingleItem'>
                <!-- only display title if it's non-empty -->
                <b:if cond='data:title != &quot;&quot; and data:title != &quot;Hero Banner&quot;'>
                  <h2 class='title'><data:title/></h2>
                </b:if>
                <div class='widget-content'>
                  <data:content/>
                </div>
              
                <b:include name='quickedit'/>
              </b:if>
</b:includable>
          </b:widget>
        </b:section>

        <!-- Dynamic Forum Categories (from Labels) -->
        <b:section class='forum-categories' id='forum-categories' maxwidgets='1' showaddelement='no'>
          <b:widget id='Label1' locked='true' title='Forum Categories' type='Label' version='2' visible='true'>
            <b:widget-settings>
              <b:widget-setting name='sorting'>ALPHA</b:widget-setting>
              <b:widget-setting name='display'>LIST</b:widget-setting>
              <b:widget-setting name='selectedLabelsList'/>
              <b:widget-setting name='showType'>ALL</b:widget-setting>
              <b:widget-setting name='showFreqNumbers'>false</b:widget-setting>
            </b:widget-settings>
            <b:includable id='main'>
                    <b:if cond='!data:view.isSingleItem'>
                    <div class='mb-8 fade-in'>
                        <div class='flex items-center mb-6'>
                            <div class='h-10 w-2 bg-blue-600 rounded-full mr-4'/>
                            <h2 class='text-2xl font-bold text-gray-800'><data:title/></h2>
                        </div>
                        
                        <div class='bg-white rounded-xl shadow-md overflow-hidden'>
                            <!-- Category Header -->
                            <div class='bg-gray-50 px-6 py-4 border-b hidden md:block'>
                                <div class='grid grid-cols-12 gap-4 text-sm font-medium text-gray-600'>
                                    <div class='col-span-6'>Category</div>
                                    <div class='col-span-3 text-center'>Threads</div>
                                    <div class='hidden md:block md:col-span-3 text-center'>Messages</div>
                                    <div class='hidden md:block md:col-span-3'>Last Post</div>
                                </div>
                            </div>
                            
                            <!-- Category Items -->
                            <div class='divide-y'>
                                <b:loop values='data:labels' var='label'>
                                    <div class='px-6 py-4 hover:bg-gray-50 transition-colors'>
                                        <div class='grid grid-cols-12 gap-4 items-center'>
                                            <div class='col-span-12 md:col-span-6'>
                                                <div class='flex items-center'>
                                                    <div class='w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3'>
                                                        <i class='fas fa-comments text-blue-600'/>
                                                    </div>
                                                    <div>
                                                        <h3 class='font-semibold'>
                                                            <a class='hover:text-blue-600' expr:href='data:label.url'><data:label.name/></a>
                                                            <span class='md:hidden text-sm font-normal text-gray-500 ml-2'>(<data:label.count/> threads)</span>
                                                        </h3>
                                                        <p class='text-sm text-gray-600'>Discussion around <data:label.name/></p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class='hidden md:block col-span-3 text-center text-gray-600'><data:label.count/></div>
                                            <div class='hidden md:block md:col-span-3 text-center text-gray-600'>~<b:eval expr='data:label.count * 4.8'/>k</div>
                                            <div class='hidden md:block md:col-span-3 text-sm text-gray-600'>
                                                <div>by <a class='font-medium hover:text-blue-600' href='#'>User123</a></div>
                                                <div class='text-xs'>2 hours ago</div>
                                            </div>
                                        </div>
                                    </div>
                                </b:loop>
                            </div>
                        </div>
                    </div>
                    </b:if>
                </b:includable>
            <b:includable id='cloud'>
  <b:loop values='data:labels' var='label'>
    <span class='label-size'>
      <b:class expr:name='&quot;label-size-&quot; + data:label.cssSize'/>
      <a class='label-name' expr:href='data:label.url'>
        <data:label.name/>
        <b:if cond='data:this.showFreqNumbers'>
          <span class='label-count'><data:label.count/></span>
        </b:if>
      </a>
    </span>
  </b:loop>
</b:includable>
            <b:includable id='content'>
  <div class='widget-content'>
    <b:class expr:name='data:this.display + &quot;-label-widget-content&quot;'/>
    <b:include cond='data:this.display == &quot;list&quot;' name='list'/>
    <b:include cond='data:this.display == &quot;cloud&quot;' name='cloud'/>
  </div>
</b:includable>
            <b:includable id='list'>
  <ul>
    <b:loop values='data:labels' var='label'>
      <li>
        <a class='label-name' expr:href='data:label.url'>
          <data:label.name/>
          <b:if cond='data:this.showFreqNumbers'>
            <span class='label-count'><data:label.count/></span>
          </b:if>
        </a>
      </li>
    </b:loop>
  </ul>
</b:includable>
          </b:widget>
        </b:section>

        <!-- Recent Discussions (Blog Posts) -->
        <section class='mb-8 fade-in'>
            <div class='flex items-center justify-between mb-6'>
                <div class='flex items-center'>
                    <div class='h-10 w-2 bg-green-500 rounded-full mr-4'/>
                    <h2 class='text-2xl font-bold text-gray-800'>Recent Discussions</h2>
                </div>
                <a class='text-blue-600 hover:text-blue-800 text-sm font-medium' href='#'>View All &#8594;</a>
            </div>
            
            <div class='bg-white rounded-xl shadow-md overflow-hidden'>
                <!-- Threads Header -->
                <div class='bg-gray-50 px-6 py-4 border-b hidden md:block'>
                    <div class='grid grid-cols-12 gap-4 text-sm font-medium text-gray-600'>
                        <div class='col-span-6'>Thread</div>
                        <div class='col-span-2 text-center'>Replies</div>
                        <div class='col-span-2 text-center'>Views</div>
                        <div class='col-span-2'>Last Reply</div>
                    </div>
                </div>
                
                <!-- Thread Items -->
                <div class='divide-y'>
                    <b:section class='main' id='main' showaddelement='no'>
                      <b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog' version='2' visible='true'>
                        <b:widget-settings>
                          <b:widget-setting name='showDateHeader'>false</b:widget-setting>
                          <b:widget-setting name='style.textcolor'>#ffffff</b:widget-setting>
                          <b:widget-setting name='showShareButtons'>true</b:widget-setting>
                          <b:widget-setting name='showCommentLink'>true</b:widget-setting>
                          <b:widget-setting name='style.urlcolor'>#ffffff</b:widget-setting>
                          <b:widget-setting name='showAuthor'>true</b:widget-setting>
                          <b:widget-setting name='style.linkcolor'>#ffffff</b:widget-setting>
                          <b:widget-setting name='style.unittype'>TextAndImage</b:widget-setting>
                          <b:widget-setting name='style.bgcolor'>#ffffff</b:widget-setting>
                          <b:widget-setting name='reactionsLabel'/>
                          <b:widget-setting name='showAuthorProfile'>false</b:widget-setting>
                          <b:widget-setting name='style.layout'>1x1</b:widget-setting>
                          <b:widget-setting name='showLabels'>true</b:widget-setting>
                          <b:widget-setting name='showLocation'>false</b:widget-setting>
                          <b:widget-setting name='postLabelsLabel'/>
                          <b:widget-setting name='showTimestamp'>true</b:widget-setting>
                          <b:widget-setting name='postsPerAd'>1</b:widget-setting>
                          <b:widget-setting name='showBacklinks'>false</b:widget-setting>
                          <b:widget-setting name='style.bordercolor'>#ffffff</b:widget-setting>
                          <b:widget-setting name='showInlineAds'>false</b:widget-setting>
                          <b:widget-setting name='showReactions'>false</b:widget-setting>
                        </b:widget-settings>
                        <b:includable id='main'>
                            <!-- If on a single post page, show the full post view -->
                            <b:if cond='data:view.isSingleItem'>
                                <b:loop values='data:posts' var='post'>
                                    <b:include data='post' name='full-post-view'/>
                                </b:loop>
                            <!-- Otherwise (on homepage, etc.), show the list of threads -->
                            <b:else/>
                                <b:if cond='data:posts'>
                                    <b:loop values='data:posts' var='post'>
                                        <b:include data='post' name='post-as-thread'/>
                                    </b:loop>
                                <b:else/>
                                    <div class='p-6 text-center text-gray-500'>No discussions found.</div>
                                </b:if>
                            </b:if>
                        </b:includable>
                        <b:includable id='aboutPostAuthor'>
  <div class='author-name'>
    <a class='g-profile' expr:href='data:post.author.profileUrl' rel='author' title='author profile'>
      <span>
        <data:post.author.name/>
      </span>
    </a>
  </div>
  <div>
    <span class='author-desc'>
      <data:post.author.aboutMe/>
    </span>
  </div>
</b:includable>
                        <b:includable id='addComments'>
  <a expr:href='data:post.commentsUrl' expr:onclick='data:post.commentsUrlOnclick'>
    <b:message name='messages.postAComment'/>
  </a>
</b:includable>
                        <b:includable id='blogThisShare'>
  <b:with value='&quot;window.open(this.href, \&quot;_blank\&quot;, \&quot;height=270,width=475\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                        <b:includable id='bylineByName' var='byline'>
  <b:switch var='data:byline.name'>
  <b:case value='share'/>
    <b:include cond='data:post.shareUrl' name='postShareButtons'/>
  <b:case value='comments'/>
    <b:include cond='data:post.allowComments' name='postCommentsLink'/>
  <b:case value='location'/>
    <b:include cond='data:post.location' name='postLocation'/>
  <b:case value='timestamp'/>
    <b:include cond='not data:view.isPage' name='postTimestamp'/>
  <b:case value='author'/>
    <b:include name='postAuthor'/>
  <b:case value='labels'/>
    <b:include cond='data:post.labels' name='postLabels'/>
  <b:case value='icons'/>
    <b:include cond='data:post.emailPostUrl' name='emailPostIcon'/>
  </b:switch>
</b:includable>
                        <b:includable id='bylineRegion' var='regionItems'>
  <b:loop values='data:regionItems' var='byline'>
    <b:include data='byline' name='bylineByName'/>
  </b:loop>
</b:includable>
                        <b:includable id='commentAuthorAvatar'>
  <div class='avatar-image-container'>
    <img class='author-avatar' expr:src='data:comment.authorAvatarSrc' height='35' width='35'/>
  </div>
</b:includable>
                        <b:includable id='commentDeleteIcon' var='comment'>
  <span expr:class='&quot;item-control &quot; + data:comment.adminClass'>
    <b:if cond='data:showCmtPopup'>
      <div class='goog-toggle-button'>
        <div class='goog-inline-block comment-action-icon'/>
      </div>
    <b:else/>
      <a class='comment-delete' expr:href='data:comment.deleteUrl' expr:title='data:messages.deleteComment'>
        <img src='https://resources.blogblog.com/img/icon_delete13.gif'/>
      </a>
    </b:if>
  </span>
</b:includable>
                        <b:includable id='commentForm' var='post'>
  <div class='comment-form'>
    <a name='comment-form'/>
    <h4 id='comment-post-message'>Post a Reply</h4>
    <b:if cond='data:this.messages.blogComment != &quot;&quot;'>
      <p class='comment-form-message'><data:this.messages.blogComment/></p>
    </b:if>
    <b:include data='post' name='commentFormIframeSrc'/>
    <iframe allowtransparency='allowtransparency' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight ?: &quot;90px&quot;' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/>
    <data:post.cmtfpIframe/>
    <script type='text/javascript'>
      BLOG_CMT_createIframe(&#39;<data:post.appRpcRelayPath/>&#39;);
    </script>
  </div>
</b:includable>
                        <b:includable id='commentFormIframeSrc' var='post'>
  <a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/>
</b:includable>
                        <b:includable id='commentItem' var='comment'>
  <div class='comment' expr:id='&quot;c&quot; + data:comment.id'>
    <b:include cond='data:blog.enabledCommentProfileImages' name='commentAuthorAvatar'/>

    <div class='comment-block'>
      <div class='comment-author'>
        <b:if cond='data:comment.authorUrl'>
          <b:message name='messages.authorSaidWithLink'>
            <b:param expr:value='data:comment.author' name='authorName'/>
            <b:param expr:value='data:comment.authorUrl' name='authorUrl'/>
          </b:message>
        <b:else/>
          <b:message name='messages.authorSaid'>
            <b:param expr:value='data:comment.author' name='authorName'/>
          </b:message>
        </b:if>
      </div>
      <div expr:class='&quot;comment-body&quot; + (data:comment.isDeleted ? &quot; deleted&quot; : &quot;&quot;)'>
        <data:comment.body/>
      </div>
      <div class='comment-footer'>
        <span class='comment-timestamp'>
          <a expr:href='data:comment.url' title='comment permalink'>
            <data:comment.timestamp/>
          </a>
          <b:include data='comment' name='commentDeleteIcon'/>
        </span>
      </div>
    </div>
  </div>
</b:includable>
                        <b:includable id='commentList' var='comments'>
  <div id='comments-block'>
    <b:loop values='data:comments' var='comment'>
      <b:include data='comment' name='commentItem'/>
    </b:loop>
  </div>
</b:includable>
                        <b:includable id='commentPicker' var='post'>
  <b:if cond='data:post.showThreadedComments'>
    <b:include data='post' name='threadedComments'/>
  <b:else/>
    <b:include data='post' name='comments'/>
  </b:if>
</b:includable>
                        <b:includable id='comments' var='post'>
  <section expr:class='&quot;comments&quot; + (data:post.embedCommentForm ? &quot; embed&quot; : &quot;&quot;)' expr:data-num-comments='data:post.numberOfComments' id='comments'>
    <a name='comments'/>
    <b:if cond='data:post.allowComments'>

      <b:include name='commentsTitle'/>

      <div expr:id='data:widget.instanceId + &quot;_comments-block-wrapper&quot;'>
        <b:include cond='data:post.comments' data='post.comments' name='commentList'/>
      </div>

      <b:if cond='data:post.commentPagingRequired'>
        <div class='paging-control-container'>
          <b:if cond='data:post.hasOlderLinks'>
            <a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'>
              <data:messages.oldest/>
            </a>
            <a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'>
              <data:messages.older/>
            </a>
          </b:if>

          <span class='comment-range-text'>
            <data:post.commentRangeText/>
          </span>

          <b:if cond='data:post.hasNewerLinks'>
            <a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'>
              <data:messages.newer/>
            </a>
            <a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'>
              <data:messages.newest/>
            </a>
          </b:if>
        </div>
      </b:if>

      <div class='footer'>
        <b:if cond='data:post.embedCommentForm'>
          <b:if cond='data:post.allowNewComments'>
            <b:include data='post' name='commentForm'/>
          <b:else/>
            <data:post.noNewCommentsText/>
          </b:if>
        <b:else/>
          <b:if cond='data:post.allowComments'>
            <b:include data='post' name='addComments'/>
          </b:if>
        </b:if>
      </div>
    </b:if>
    <b:if cond='data:showCmtPopup'>
      <div id='comment-popup'>
        <iframe allowtransparency='allowtransparency' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'>
        </iframe>
      </div>
    </b:if>
  </section>
</b:includable>
                        <b:includable id='commentsLink'>
  <a class='comment-link' expr:href='data:post.commentsUrl' expr:onclick='data:post.commentsUrlOnclick'>
    <b:if cond='data:post.numberOfComments &gt; 0'>
      <b:message name='messages.numberOfComments'>
        <b:param expr:value='data:post.numberOfComments' name='numComments'/>
      </b:message> - <span class='text-blue-500'>Post a Reply</span>
    <b:else/>
      Post a Reply
    </b:if>
  </a>
</b:includable>
                        <b:includable id='commentsLinkIframe'>
  <!-- G+ comments, no longer available. The includable is retained for backwards-compatibility. -->
</b:includable>
                        <b:includable id='commentsTitle'>
  <h3 class='title'>Replies</h3>
</b:includable>
                        <b:includable id='defaultAdUnit'>
  <ins class='adsbygoogle' data-ad-format='auto' expr:data-ad-client='data:adClientId ?: data:blog.adsenseClientId' expr:data-ad-host='data:blog.adsenseHostId' expr:style='data:style ?: &quot;display: block;&quot;'>
    <b:attr cond='not data:blog.analytics4' expr:value='data:blog.analyticsAccountNumber' name='data-analytics-uacct'/>
  </ins>
  <script>
   (adsbygoogle = window.adsbygoogle || []).push({});
  </script>
</b:includable>
                        <b:includable id='emailPostIcon'>
  <span class='byline post-icons'>
    <!-- email post links -->
    <span class='item-action'>
      <a expr:href='data:post.emailPostUrl' expr:title='data:messages.emailPost'>
        <b:include data='{ iconClass: &quot;touch-icon sharing-icon&quot; }' name='emailIcon'/>
      </a>
    </span>
  </span>
</b:includable>
                        <b:includable id='facebookShare'>
  <b:with value='&quot;window.open(this.href, \&quot;_blank\&quot;, \&quot;height=430,width=640\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                        <b:includable id='feedLinks'>
  <b:if cond='!data:view.isPost'> <!-- Blog feed links -->
    <b:if cond='data:feedLinks'>
      <div class='blog-feeds'>
        <b:include data='feedLinks' name='feedLinksBody'/>
      </div>
    </b:if>
  <b:else/> <!--Post feed links -->
    <div class='post-feeds'>
      <b:loop values='data:posts' var='post'>
        <b:if cond='data:post.allowComments and data:post.feedLinks'>
          <b:include data='post.feedLinks' name='feedLinksBody'/>
        </b:if>
      </b:loop>
    </div>
  </b:if>
</b:includable>
                        <b:includable id='feedLinksBody' var='links'>
  <div class='feed-links'>
  <data:messages.subscribeTo/>
  <b:loop values='data:links' var='f'>
     <a class='feed-link' expr:href='data:f.url' expr:type='data:f.mimeType' target='_blank'><data:f.name/> (<data:f.feedType/>)</a>
  </b:loop>
  </div>
</b:includable>
                        <b:includable id='footerBylines'>
  <b:if cond='data:widgets.Blog.first.footerBylines'>
    <b:loop index='i' values='data:widgets.Blog.first.footerBylines' var='region'>
      <b:if cond='not data:region.items.empty'>
        <div expr:class='&quot;post-footer-line post-footer-line-&quot; + (data:i + 1)'>
          <b:with value='&quot;footer-&quot; + (data:i + 1)' var='regionName'>
            <b:include data='region.items' name='bylineRegion'/>
          </b:with>
        </div>
      </b:if>
    </b:loop>
  </b:if>
</b:includable>
                        <b:includable id='full-post-view' var='post'>
                            <div class='bg-white rounded-xl shadow-md overflow-hidden p-6 md:p-8'>
                                <!-- Post Header -->
                                <div class='border-b pb-4 mb-4'>
                                    <h1 class='text-3xl md:text-4xl font-bold text-gray-900 mb-3'><data:post.title/></h1>
                                    <div class='flex flex-wrap items-center text-sm text-gray-500'>
                                        <img class='w-8 h-8 rounded-full mr-3' expr:alt='data:post.author' expr:src='data:post.authorPhoto.url'/>
                                        <span>Started by <strong class='text-gray-700'><data:post.author/></strong> &#8226; <data:post.timestamp/></span>
                                    </div>
                                </div>
                        
                                <!-- Post Body -->
                                <div class='post-body entry-content prose max-w-none dark:prose-invert'>
                                    <data:post.body/>
                                </div>
                        
                                <!-- Reactions & Share -->
                                <div class='mt-6 pt-6 border-t flex flex-col md:flex-row justify-between items-center gap-4'>
                                    <div class='flex items-center gap-2'>
                                        <span class='reaction-btn active'><i class='fas fa-pray mr-1'/> 42</span>
                                        <span class='reaction-btn'><i class='fas fa-heart mr-1'/> 8</span>
                                    </div>
                                    <div class='flex items-center gap-2'>
                                        <b:include cond='data:post.shareUrl' name='postShareButtons'/>
                                    </div>
                                </div>
                            </div>
                        
                            <!-- AI-Powered Similar Threads -->
                            <div class='mt-8 pt-6 border-t dark:border-gray-700 bg-gray-50 dark:bg-gray-800/50 p-6 rounded-lg' id='similar-threads-container'>
                                <!-- Content will be injected by JavaScript -->
                            </div>
                            
                            <!-- Comments Section -->
                            <b:include cond='data:post.allowComments' data='post' name='commentPicker'/>
                        </b:includable>
                        <b:includable id='googlePlusShare'>
</b:includable>
                        <b:includable id='headerByline'>
  <b:if cond='data:widgets.Blog.first.headerByline'>
    <div class='post-header'>
      <div class='post-header-line-1'>
        <b:with value='&quot;header-1&quot;' var='regionName'>
          <b:include data='data:widgets.Blog.first.headerByline.items' name='bylineRegion'/>
        </b:with>
      </div>
    </div>
  </b:if>
</b:includable>
                        <b:includable id='homePageLink'>
  <a class='home-link' expr:href='data:blog.homepageUrl'>
    <data:messages.home/>
  </a>
</b:includable>
                        <b:includable id='iframeComments' var='post'>
  <!-- G+ comments, no longer available. The includable is retained for backwards-compatibility. -->
</b:includable>
                        <b:includable id='inlineAd' var='post'>
  <b:if cond='!data:view.isPreview'>
    <b:if cond='data:this.adCode or data:this.adClientId or data:blog.adsenseClientId'>
      <!-- Ad -->
      <div class='inline-ad'>
        <b:if cond='data:this.adCode != &quot;&quot;'>
          <data:this.adCode/>
        <b:else/>
          <b:include cond='data:this.adClientId or data:blog.adsenseClientId' name='defaultAdUnit'/>
        </b:if>
      </div>
    </b:if>
  <b:else/>
    <div class='inline-ad'>
      <div class='inline-ad-placeholder'>
        <span><b:message name='messages.adsGoHere'/></span>
      </div>
    </div>
  </b:if>
</b:includable>
                        <b:includable id='linkShare'>
  <b:with value='&quot;window.prompt(\&quot;Copy to clipboard: Ctrl+C, Enter\&quot;, \&quot;&quot; + data:originalUrl + &quot;\&quot;); return false;&quot;' var='onclick'>
    <b:include name='platformShare'/>
  </b:with>
</b:includable>
                        <b:includable id='nextPageLink'>
  <a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &quot;_blog-pager-older-link&quot;' expr:title='data:messages.olderPosts'>
    <data:messages.olderPosts/>
  </a>
</b:includable>
                        <b:includable id='otherSharingButton'>
  <span class='sharing-platform-button sharing-element-other' expr:aria-label='data:messages.shareToOtherApps.escaped' expr:data-url='data:originalUrl' expr:title='data:messages.shareToOtherApps.escaped' role='menuitem' tabindex='-1'>
    <b:with value='{key: &quot;sharingOther&quot;}' var='platform'>
      <b:include name='sharingPlatformIcon'/>
    </b:with>
    <span class='platform-sharing-text'><data:messages.shareOtherApps.escaped/></span>
  </span>
</b:includable>
                        <b:includable id='platformShare'>
  <a expr:class='&quot;goog-inline-block sharing-&quot; + data:platform.key' expr:data-url='data:originalUrl' expr:href='data:shareUrl + &quot;&amp;target=&quot; + data:platform.target' expr:onclick='data:onclick ? data:onclick : &quot;&quot;' expr:title='data:platform.shareMessage' target='_blank'>
    <span class='share-button-link-text'>
      <data:platform.shareMessage/>
    </span>
  </a>
</b:includable>
                        <b:includable id='post' var='post'>
  <div class='post'>
    <b:include data='post' name='postMeta'/>
    <b:include data='post' name='postTitle'/>
    <b:include name='headerByline'/>
    <b:if cond='data:view.isSingleItem'>
      <b:include data='post' name='postBody'/>
    <b:else/>
      <b:include data='post' name='postBodySnippet'/>
      <b:include data='post' name='postJumpLink'/>
    </b:if>
    <b:include data='post' name='postFooter'/>
  </div>
</b:includable>
                        <b:includable id='post-as-thread' var='post'>
                            <!-- Redesigned Discussion Card -->
                            <div class='flex flex-col md:flex-row items-start md:items-center gap-4 px-6 py-4 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors'>
                                <!-- Avatar -->
                                <div class='hidden md:block flex-shrink-0'>
                                    <img class='w-10 h-10 rounded-full' decoding='async' expr:alt='data:post.author' expr:src='data:post.authorPhoto.url' loading='lazy'/>
                                </div>
                        
                                <!-- Main Content -->
                                <div class='flex-grow'>
                                    <h3 class='text-lg font-semibold text-gray-800 dark:text-gray-200 hover:text-blue-600 dark:hover:text-blue-400'>
                                        <a expr:href='data:post.url'><data:post.title/></a>
                                    </h3>
                                    <div class='flex flex-wrap items-center gap-x-3 gap-y-1 text-sm text-gray-500 dark:text-gray-400 mt-1'>
                                        <span class='flex items-center'>
                                            <img class='w-5 h-5 rounded-full mr-1.5 md:hidden' decoding='async' expr:alt='data:post.author' expr:src='data:post.authorPhoto.url' loading='lazy'/>
                                            <span><data:post.author/></span>
                                        </span>
                                        <span>&#8226;</span>
                                        <span><data:post.timestamp/></span>
                                        <b:if cond='data:post.labels'>
                                            <span>&#8226;</span>
                                            <div class='flex items-center gap-1.5'>
                                                <i class='fas fa-tag fa-xs text-gray-400'/>
                                                <b:loop index='i' values='data:post.labels' var='label'>
                                                    <a class='hover:underline' expr:href='data:label.url'><data:label.name/></a><b:if cond='data:i != data:post.labels.size - 1'>,</b:if>
                                                </b:loop>
                                            </div>
                                        </b:if>
                                    </div>
                                </div>
                        
                                <!-- Stats (Right Side) -->
                                <div class='flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 flex-shrink-0 mt-2 md:mt-0'>
                                    <div class='flex items-center' title='Replies'>
                                        <i class='fas fa-comment-alt fa-fw mr-2 text-gray-400'/>
                                        <span class='font-medium'><data:post.numComments/></span>
                                    </div>
                                    <div class='flex items-center' title='Views (Static)'>
                                        <i class='fas fa-eye fa-fw mr-2 text-gray-400'/>
                                        <span class='font-medium'>156</span>
                                    </div>
                                </div>
                            </div>
                        </b:includable>
                        <b:includable id='postAuthor'>
  <span class='byline post-author vcard'>
    <span class='post-author-label'>
      <data:byline.label/>
    </span>
    <span class='fn'>
      <b:if cond='data:post.author.profileUrl'>
        <meta expr:content='data:post.author.profileUrl'/>
        <a class='g-profile' expr:href='data:post.author.profileUrl' rel='author' title='author profile'>
          <span><data:post.author.name/></span>
        </a>
      <b:else/>
        <span><data:post.author.name/></span>
      </b:if>
    </span>
  </span>
</b:includable>
                        <b:includable id='postBody' var='post'>
  <!-- If metaDescription is empty, use the post body as the schema.org description too, for G+/FB snippeting. -->
  <div class='post-body entry-content float-container' expr:id='&quot;post-body-&quot; + data:post.id'>
    <data:post.body/>
  </div>
</b:includable>
                        <b:includable id='postBodySnippet' var='post'>
  <b:include data='post' name='postBody'/>
</b:includable>
                        <b:includable id='postCommentsAndAd' var='post'>
  <article class='post-outer-container'>
    <!-- Post title and body -->
    <div class='post-outer'>
      <b:include data='post' name='post'/>
    </div>

    <!-- Comments -->
    <b:include cond='data:view.isSingleItem' data='post' name='commentPicker'/>

    <!-- Show ad inside post container, after comments, if single item. -->
    <b:include cond='data:view.isSingleItem and data:post.includeAd' data='post' name='inlineAd'/>
  </article>

  <!-- Show ad outside post container (between posts) for feed pages. -->
  <b:include cond='data:view.isMultipleItems and data:post.includeAd' data='post' name='inlineAd'/>
</b:includable>
                        <b:includable id='postCommentsLink'>
  <b:if cond='data:view.isMultipleItems'>
    <span class='byline post-comment-link container'>
      <b:include cond='data:post.commentSource != 1' name='commentsLink'/>
    </span>
  </b:if>
</b:includable>
                        <b:includable id='postFooter' var='post'>
  <div class='post-footer'>
    <b:include name='footerBylines'/>
    <b:include data='post' name='postFooterAuthorProfile'/>
  </div>
</b:includable>
                        <b:includable id='postFooterAuthorProfile' var='post'>
  <b:if cond='data:post.author.aboutMe and data:view.isPost'>
    <div class='author-profile'>
      <b:if cond='data:post.author.authorPhoto.url'>
        <img class='author-image' expr:src='data:post.author.authorPhoto.url' width='50px'/>
        <div class='author-about'>
          <b:include data='post' name='aboutPostAuthor'/>
        </div>
      <b:else/>
        <b:include data='post' name='aboutPostAuthor'/>
      </b:if>
    </div>
  </b:if>
</b:includable>
                        <b:includable id='postHeader' var='post'>
  <b:include name='headerByline'/>
</b:includable>
                        <b:includable id='postJumpLink' var='post'>
  <div class='jump-link flat-button'>
    <a expr:href='data:post.url fragment &quot;more&quot;' expr:title='data:post.title'>
      <b:eval expr='data:blog.jumpLinkMessage'/>
    </a>
  </div>
</b:includable>
                        <b:includable id='postLabels'>
  <span class='byline post-labels'>
    <span class='byline-label'><data:byline.label/></span>
    <b:loop index='i' values='data:post.labels' var='label'>
      <a expr:href='data:label.url' rel='tag'>
        <data:label.name/>
      </a>
    </b:loop>
  </span>
</b:includable>
                        <b:includable id='postLocation'>
  <span class='byline post-location'>
    <data:byline.label/>
    <a expr:href='data:post.location.mapsUrl' target='_blank'><data:post.location.name/></a>
  </span>
</b:includable>
                        <b:includable id='postMeta' var='post'>
  <b:include data='post' name='postMetadataJSON'/>
</b:includable>
                        <b:includable id='postMetadataJSONImage'>
  &quot;image&quot;: {
    &quot;@type&quot;: &quot;ImageObject&quot;,
    <b:if cond='data:post.featuredImage.isResizable'>
    &quot;url&quot;: &quot;<b:eval expr='resizeImage(data:post.featuredImage, 1200, &quot;1200:630&quot;)'/>&quot;,
    &quot;height&quot;: 630,
    &quot;width&quot;: 1200
    <b:else/>
    &quot;url&quot;: &quot;https://blogger.googleusercontent.com/img/b/U2hvZWJveA/AVvXsEgfMvYAhAbdHksiBA24JKmb2Tav6K0GviwztID3Cq4VpV96HaJfy0viIu8z1SSw_G9n5FQHZWSRao61M3e58ImahqBtr7LiOUS6m_w59IvDYwjmMcbq3fKW4JSbacqkbxTo8B90dWp0Cese92xfLMPe_tg11g/w1200/&quot;,
    &quot;height&quot;: 348,
    &quot;width&quot;: 1200
    </b:if>
  },
</b:includable>
                        <b:includable id='postMetadataJSONPublisher'>
 &quot;publisher&quot;: {
    &quot;@type&quot;: &quot;Organization&quot;,
    &quot;name&quot;: &quot;Blogger&quot;,
    &quot;logo&quot;: {
      &quot;@type&quot;: &quot;ImageObject&quot;,
      &quot;url&quot;: &quot;https://blogger.googleusercontent.com/img/b/U2hvZWJveA/AVvXsEgfMvYAhAbdHksiBA24JKmb2Tav6K0GviwztID3Cq4VpV96HaJfy0viIu8z1SSw_G9n5FQHZWSRao61M3e58ImahqBtr7LiOUS6m_w59IvDYwjmMcbq3fKW4JSbacqkbxTo8B90dWp0Cese92xfLMPe_tg11g/h60/&quot;,
      &quot;width&quot;: 206,
      &quot;height&quot;: 60
    }
  },
</b:includable>
                        <b:includable id='postPagination'>
  <div class='blog-pager container' id='blog-pager'>
    <b:include cond='data:newerPageUrl' name='previousPageLink'/>
    <b:include cond='data:olderPageUrl' name='nextPageLink'/>
    <b:include cond='data:view.url != data:blog.homepageUrl' name='homePageLink'/>
  </div>
</b:includable>
                        <b:includable id='postReactions'>
  
</b:includable>
                        <b:includable id='postShareButtons'>
  <div class='custom-share-buttons flex items-center gap-2'>
    <span class='text-sm font-medium text-gray-600 dark:text-gray-400'>Share:</span>
    <!-- Twitter -->
    <a class='share-twitter' expr:href='&quot;https://twitter.com/intent/tweet?text=&quot; + data:post.title + &quot;&amp;url=&quot; + data:post.url.canonical' rel='nofollow' target='_blank' title='Share on Twitter'><i class='fab fa-twitter'/></a>
    <!-- WhatsApp -->
    <a class='share-whatsapp' expr:href='&quot;https://api.whatsapp.com/send?text=&quot; + data:post.title + &quot;%20&quot; + data:post.url.canonical' rel='nofollow' target='_blank' title='Share on WhatsApp'><i class='fab fa-whatsapp'/></a>
    <!-- Telegram -->
    <a class='share-telegram' expr:href='&quot;https://t.me/share/url?url=&quot; + data:post.url.canonical + &quot;&amp;text=&quot; + data:post.title' rel='nofollow' target='_blank' title='Share on Telegram'><i class='fab fa-telegram'/></a>
    <!-- Reddit -->
    <a class='share-reddit' expr:href='&quot;https://www.reddit.com/submit?url=&quot; + data:post.url.canonical + &quot;&amp;title=&quot; + data:post.title' rel='nofollow' target='_blank' title='Share on Reddit'><i class='fab fa-reddit'/></a>
    <!-- Tumblr -->
    <a class='share-tumblr' expr:href='&quot;https://www.tumblr.com/share/link?url=&quot; + data:post.url.canonical + &quot;&amp;name=&quot; + data:post.title' rel='nofollow' target='_blank' title='Share on Tumblr'><i class='fab fa-tumblr'/></a>
  </div>
</b:includable>
                        <b:includable id='postTimestamp'>
  <span class='byline post-timestamp'>
    <data:byline.label/>
    <b:if cond='data:post.url'>
      <meta expr:content='data:post.url.canonical'/>
      <a class='timestamp-link' expr:href='data:post.url' rel='bookmark' title='permanent link'>
        <time class='published' expr:datetime='data:post.date.iso8601' expr:title='data:post.date.iso8601'>
          <data:post.date/>
        </time>
      </a>
    </b:if>
  </span>
</b:includable>
                        <b:includable id='postTitle' var='post'>
  <a expr:name='data:post.id'/>
  <b:if cond='data:post.title != &quot;&quot;'>
    <h3 class='post-title entry-title'>
      <b:if cond='data:post.link or (data:post.url and data:view.url != data:post.url)'>
        <a expr:href='data:post.link ?: data:post.url'><data:post.title/></a>
      <b:else/>
        <data:post.title/>
      </b:if>
    </h3>
  </b:if>
</b:includable>
                        <b:includable id='previousPageLink'>
  <a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &quot;_blog-pager-newer-link&quot;' expr:title='data:messages.newerPosts'>
    <data:messages.newerPosts/>
  </a>
</b:includable>
                        <b:includable id='sharingButton'>
  <span expr:aria-label='data:platform.shareMessage' expr:class='&quot;sharing-platform-button sharing-element-&quot; + data:platform.key' expr:data-href='data:shareUrl + &quot;&amp;target=&quot; + data:platform.target' expr:data-url='data:originalUrl' expr:title='data:platform.shareMessage' role='menuitem' tabindex='-1'>
    <b:include name='sharingPlatformIcon'/>
    <span class='platform-sharing-text'><data:platform.name/></span>
  </span>
</b:includable>
                        <b:includable id='sharingButtonContent'>
  <div class='flat-icon-button ripple'>
    <b:include name='shareIcon'/>
  </div>
</b:includable>
                        <b:includable id='sharingButtons'>
  <div class='sharing' expr:aria-owns='&quot;sharing-popup-&quot; + data:sharingId' expr:data-title='data:shareTitle'>
    <button class='sharing-button touch-icon-button' expr:aria-controls='&quot;sharing-popup-&quot; + data:sharingId' expr:aria-label='data:messages.share.escaped' expr:id='&quot;sharing-button-&quot; + data:sharingId' role='button'>
      <b:include name='sharingButtonContent'/>
    </button>
    <b:include name='sharingButtonsMenu'/>
  </div>
</b:includable>
                        <b:includable id='sharingButtonsMenu'>
  <div class='share-buttons-container'>
    <ul aria-hidden='true' class='share-buttons hidden' expr:aria-label='data:messages.share.escaped' expr:id='&quot;sharing-popup-&quot; + data:sharingId' role='menu'>
      <b:loop values='(data:platforms ?: data:blog.sharing.platforms) filter (p =&gt; p.key not in {&quot;blogThis&quot;})' var='platform'>
        <li>
          <b:include name='sharingButton'/>
        </li>
      </b:loop>
      <li aria-hidden='true' class='hidden'>
        <b:include name='otherSharingButton'/>
      </li>
    </ul>
  </div>
</b:includable>
                        <b:includable id='sharingPlatformIcon'>
  <b:include data='{ iconClass: (&quot;touch-icon sharing-&quot; + data:platform.key) }' expr:name='data:platform.key + &quot;Icon&quot;'/>
</b:includable>
                        <b:includable id='threadedCommentForm' var='post'>
  <div class='comment-form'>
    <a name='comment-form'/>
    <h4 id='comment-post-message'>Post a Reply</h4>
    <b:if cond='data:this.messages.blogComment != &quot;&quot;'>
      <p class='comment-form-message'><data:this.messages.blogComment/></p>
    </b:if>
    <b:include data='post' name='commentFormIframeSrc'/>
    <iframe allowtransparency='allowtransparency' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight ?: &quot;90px&quot;' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/>
    <data:post.cmtfpIframe/>
    <script type='text/javascript'>
      BLOG_CMT_createIframe(&#39;<data:post.appRpcRelayPath/>&#39;);
    </script>
  </div>
</b:includable>
                        <b:includable id='threadedCommentJs' var='post'>
  <script async='async' expr:src='data:post.commentSrc' type='text/javascript'/>
  <b:template-script inline='true' name='threaded_comments'/>
  <script type='text/javascript'>
    blogger.widgets.blog.initThreadedComments(
        <data:post.commentJso/>,
        <data:post.commentMsgs/>,
        <data:post.commentConfig/>);
  </script>
</b:includable>
                        <b:includable id='threadedComments' var='post'>
  <section class='comments threaded' expr:data-embed='data:post.embedCommentForm' expr:data-num-comments='data:post.numberOfComments' id='comments'>
    <a name='comments'/>

    <b:include name='commentsTitle'/>

    <div class='comments-content'>
      <b:if cond='data:post.embedCommentForm'>
        <b:include data='post' name='threadedCommentJs'/>
      </b:if>
      <div id='comment-holder'>
         <data:post.commentHtml/>
      </div>
    </div>

    <p class='comment-footer'>
      <b:if cond='data:post.allowNewComments'>
        <b:include data='post' name='threadedCommentForm'/>
      <b:else/>
        <data:post.noNewCommentsText/>
      </b:if>
      <b:if cond='data:post.showManageComments'>
        <b:include data='post' name='manageComments'/>
      </b:if>
    </p>

    <b:if cond='data:showCmtPopup'>
      <div id='comment-popup'>
        <iframe allowtransparency='allowtransparency' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'>
        </iframe>
      </div>
    </b:if>
  </section>
</b:includable>
                        <b:includable id='tooltipCss'>
  <!-- LINT.IfChange -->
  <style>
    .post-body a.b-tooltip-container {
      position: relative;
      display: inline-block;
    }

    .post-body a.b-tooltip-container .b-tooltip {
      display: block !important;
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translate(-20%, 1px);
      visibility: hidden;
      opacity: 0;
      z-index: 1;
      transition: opacity 0.2s ease-in-out;
    }

    .post-body a.b-tooltip-container .b-tooltip iframe {
      width: 200px;
      height: 198px;
      max-width: none;
      border: none;
      border-radius: 20px;
      box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.2);
    }

    .post-body a.b-tooltip-container:hover .b-tooltip {
      visibility: visible;
      opacity: 1;
    }
  </style>
  <!-- LINT.ThenChange(//depot/google3/java/com/google/blogger/b2/layouts/widgets/v2-style.css) -->
</b:includable>
                      </b:widget>
                    </b:section>
                </div>
            </div>
        </section>

        <!-- Gadget Sections for more Static Content -->
        <b:section class='main-bottom-widgets' id='main-bottom-widgets' showaddelement='yes'/>
    </main>

    <!-- Footer -->
    <footer class='bg-gray-800 text-white py-12'>
        <div class='container mx-auto px-4'>
            <div class='grid grid-cols-1 md:grid-cols-4 gap-8'>
                <div>
                    <div class='flex items-center space-x-2 mb-4'>
                        <div class='w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center'>
                            <i class='fas fa-comments text-white'/>
                        </div>
                        <h3 class='text-xl font-bold'>Blo<span class='text-green-400'>Forum</span></h3>
                    </div>
                    <p class='text-gray-400'>A modern forum community for sharing knowledge and experiences.</p>
                </div>
                
                <b:section class='footer-links-1' id='footer-links-1' maxwidgets='1' showaddelement='yes'>
                  <b:widget id='LinkList101' locked='false' title='Quick Links' type='LinkList' version='2' visible='true'>
                    <b:includable id='main'>
                            <h4 class='text-lg font-semibold mb-4'><data:title/></h4>
                            <ul class='space-y-2'>
                                <b:loop values='data:links' var='link'>
                                    <li><a class='text-gray-400 hover:text-white transition-colors' expr:href='data:link.target'><data:link.name/></a></li>
                                </b:loop>
                            </ul>
                        </b:includable>
                    <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
                  </b:widget>
                </b:section>
                
                <b:section class='footer-links-2' id='footer-links-2' maxwidgets='1' showaddelement='yes' tag='div'>
                  <b:widget id='LinkList102' locked='false' title='Community' type='LinkList' version='2' visible='true'>
                    <b:includable id='main'>
                            <h4 class='text-lg font-semibold mb-4'><data:title/></h4>
                            <ul class='space-y-2'>
                                <b:loop values='data:links' var='link'>
                                    <li><a class='text-gray-400 hover:text-white transition-colors' expr:href='data:link.target'><data:link.name/></a></li>
                                </b:loop>
                            </ul>
                        </b:includable>
                    <b:includable id='content'>
 <div class='widget-content'>
   <ul>
     <b:loop values='data:links' var='link'>
       <li><a expr:href='data:link.target'><data:link.name/></a></li>
     </b:loop>
   </ul>
 </div>
</b:includable>
                  </b:widget>
                </b:section>
                
                <b:section class='footer-subscribe' id='footer-subscribe' maxwidgets='1' showaddelement='yes' tag='div'>
                  <b:widget id='HTML101' locked='false' title='Subscribe' type='HTML' version='2' visible='true'>
                    <b:widget-settings>
                      <b:widget-setting name='content'/>
                    </b:widget-settings>
                    <b:includable id='main'>
                            <b:if cond='data:title != &quot;&quot;'>
                                <h4 class='text-lg font-semibold mb-4'><data:title/></h4>
                            </b:if>
                            <div class='widget-content'>
                                <data:content/>
                            </div>
                        </b:includable>
                  </b:widget>
                </b:section>
            </div>
            
            <div class='border-t border-gray-700 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center'>
                <p class='text-gray-400 text-sm text-center md:text-left'>
                    &#169; 2024 <data:blog.title/>. All Rights Reserved. | Design by <a class='hover:text-white font-medium' href='https://www.jayabayastudio.com/' rel='noopener' target='_blank' title='Theme Creator'>Jayabaya Studio</a>
                </p>
                <div class='flex space-x-4 mt-4 md:mt-0'>
                    <a aria-label='Follow us on Facebook' class='text-gray-400 hover:text-white transition-colors' href='#' title='Facebook'><i class='fab fa-facebook-f'/></a>
                    <a aria-label='Follow us on Twitter' class='text-gray-400 hover:text-white transition-colors' href='#' title='Twitter'><i class='fab fa-twitter'/></a>
                    <a aria-label='Check our GitHub' class='text-gray-400 hover:text-white transition-colors' href='#' title='GitHub'><i class='fab fa-github'/></a>
                    <a aria-label='Join our Discord community' class='text-gray-400 hover:text-white transition-colors' href='#' title='Discord'><i class='fab fa-discord'/></a>
                </div>
            </div>
        </div>
    </footer>

    <!-- Fix: Add type="module" to script tag to enable top-level await for dynamic module import. -->
    <script type='module'>
    /*<![CDATA[*/
        document.addEventListener('DOMContentLoaded', function() {
            // --- Theme toggle functionality ---
            const themeToggle = document.getElementById('themeToggle');
            const themeIcon = document.getElementById('themeIcon');
            const htmlElement = document.documentElement;
            
            if (themeToggle && themeIcon && htmlElement) {
                const savedTheme = localStorage.getItem('theme');
                const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                
                if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
                    htmlElement.classList.add('dark');
                    themeIcon.classList.remove('fa-moon');
                    themeIcon.classList.add('fa-sun');
                }
                
                themeToggle.addEventListener('click', function() {
                    if (htmlElement.classList.contains('dark')) {
                        htmlElement.classList.remove('dark');
                        themeIcon.classList.remove('fa-sun');
                        themeIcon.classList.add('fa-moon');
                        localStorage.setItem('theme', 'light');
                    } else {
                        htmlElement.classList.add('dark');
                        themeIcon.classList.remove('fa-moon');
                        themeIcon.classList.add('fa-sun');
                        localStorage.setItem('theme', 'dark');
                    }
                });
            }

            // --- Simple fade-in animation for sections ---
            const fadeElements = document.querySelectorAll('.fade-in');
            if (fadeElements.length > 0) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.opacity = 1;
                        }
                    });
                }, { threshold: 0.1 });
                
                fadeElements.forEach(element => {
                    element.style.opacity = 0;
                    element.style.transition = 'opacity 0.5s ease-in';
                    observer.observe(element);
                });
            }

            // --- Mobile Menu Toggle ---
            const mobileMenuBtn = document.getElementById('mobileMenuBtn');
            const mobileMenu = document.getElementById('mobileMenu');
            if (mobileMenuBtn && mobileMenu) {
                mobileMenuBtn.addEventListener('click', function() {
                    mobileMenu.classList.toggle('hidden');
                    // Style for mobile view
                    mobileMenu.classList.add('absolute', 'top-full', 'left-0', 'right-0', 'bg-white', 'shadow-lg', 'p-4', 'flex-col', 'space-y-4');
                    mobileMenu.classList.remove('md:flex', 'md:space-x-8');
                });
                // Close menu if clicked outside
                document.addEventListener('click', function(event) {
                    const isClickInside = mobileMenu.contains(event.target) || mobileMenuBtn.contains(event.target);
                    if (!isClickInside && !mobileMenu.classList.contains('hidden')) {
                        mobileMenu.classList.add('hidden');
                    }
                });
            }

            // --- Filter by Category ---
            function initializeLabelFilter() {
                const filterBtn = document.getElementById('filter-btn');
                const filterDropdown = document.getElementById('filter-dropdown');
                const labelListContainer = document.getElementById('label-list-container');

                if (!filterBtn || !filterDropdown || !labelListContainer) return;

                // Toggle dropdown visibility
                filterBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    filterDropdown.classList.toggle('hidden');
                });

                // Close dropdown if clicked outside
                document.addEventListener('click', (e) => {
                    if (!filterBtn.contains(e.target) && !filterDropdown.contains(e.target)) {
                        filterDropdown.classList.add('hidden');
                    }
                });

                // Fetch and populate labels from Blogger's JSON feed
                async function fetchLabels() {
                    try {
                        // Using the posts summary feed is a good way to get all labels
                        const response = await fetch('/feeds/posts/summary?alt=json&max-results=0');
                        if (!response.ok) throw new Error('Failed to fetch labels');
                        
                        const data = await response.json();
                        const labels = data.feed.category || [];

                        if (labels.length > 0) {
                            labelListContainer.innerHTML = ''; // Clear spinner
                            labels.sort((a, b) => a.term.localeCompare(b.term)).forEach(label => {
                                const labelName = label.term;
                                const labelUrl = `/search/label/${encodeURIComponent(labelName)}`;
                                const link = document.createElement('a');
                                link.href = labelUrl;
                                link.className = 'block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700';
                                link.textContent = labelName;
                                link.setAttribute('role', 'menuitem');
                                labelListContainer.appendChild(link);
                            });
                        } else {
                            labelListContainer.innerHTML = '<p class="px-4 py-2 text-sm text-gray-500">No categories found.</p>';
                        }
                    } catch (error) {
                        console.error('Error fetching labels:', error);
                        labelListContainer.innerHTML = '<p class="px-4 py-2 text-sm text-red-500">Error loading categories.</p>';
                    }
                }

                // Only fetch if the dropdown is opened for the first time to save resources
                let hasFetched = false;
                filterBtn.addEventListener('click', () => {
                    if (!hasFetched) {
                        fetchLabels();
                        hasFetched = true;
                    }
                });
            }

            // --- "New Thread" Button Logic ---
            function initializeNewThreadButton() {
                const newThreadBtn = document.getElementById('new-thread-btn');
                if (!newThreadBtn) return;

                // Check if we are on a single post page by looking for the #comments element
                const commentsSection = document.getElementById('comments');

                if (commentsSection) {
                    // On a post page, the text is already "Bantu Jawab". Just set the link and behavior.
                    newThreadBtn.href = '#comment-form';
                    newThreadBtn.title = 'Bantu jawab thread ini';
                    // Add smooth scroll for better UX
                    newThreadBtn.addEventListener('click', function(e) {
                        e.preventDefault();
                        document.querySelector(newThreadBtn.getAttribute('href')).scrollIntoView({ behavior: 'smooth' });
                    });
                } else {
                    // On other pages (homepage, etc.), change it back to "New Thread" and link to the editor.
                    newThreadBtn.innerHTML = '<i class="fas fa-plus mr-2"></i> New Thread';
                    const blogId = document.body.getAttribute('data-blog-id');
                    if (blogId) {
                        newThreadBtn.href = `https://www.blogger.com/blogger.g?blogID=${blogId}#editor/src=blank`;
                        newThreadBtn.target = '_blank'; // Open in a new tab
                        newThreadBtn.title = 'Create a new discussion thread';
                    } else {
                        // Fallback if blogId isn't found
                        newThreadBtn.style.display = 'none';
                    }
                }
            }

            async function initializeReputationSystem() {
                const cacheKey = 'userReputationData';
                const cacheDuration = 3600 * 1000; // Cache selama 1 jam
                let authorCommentCounts = {};

                try {
                    const cachedData = localStorage.getItem(cacheKey);
                    if (cachedData) {
                        const { timestamp, counts } = JSON.parse(cachedData);
                        if (Date.now() - timestamp < cacheDuration) {
                            authorCommentCounts = counts;
                        }
                    }

                    if (Object.keys(authorCommentCounts).length === 0) {
                        const response = await fetch('/feeds/comments/default?alt=json&max-results=500');
                        if (!response.ok) throw new Error('Failed to fetch comments');
                        
                        const data = await response.json();
                        const comments = data.feed.entry || [];

                        comments.forEach(comment => {
                            const authorName = comment.author[0].name.$t;
                            if (authorName && authorName !== 'Anonymous') {
                                authorCommentCounts[authorName] = (authorCommentCounts[authorName] || 0) + 1;
                            }
                        });

                        localStorage.setItem(cacheKey, JSON.stringify({
                            timestamp: Date.now(),
                            counts: authorCommentCounts
                        }));
                    }

                    // Terapkan badge ke penulis postingan
                    document.querySelectorAll('.author-name-reputation').forEach(el => {
                        const authorName = el.textContent.trim();
                        const count = authorCommentCounts[authorName];
                        const badge = getReputationBadge(count);
                        if (badge && !el.querySelector('.badge')) {
                            const badgeEl = document.createElement('span');
                            badgeEl.className = `badge ${badge.class} ml-2`;
                            badgeEl.textContent = badge.name;
                            badgeEl.title = `${count} comments`;
                            el.insertAdjacentElement('beforeend', badgeEl);
                        }
                    });

                    // Terapkan badge ke penulis komentar
                    document.querySelectorAll('.comments .comment-author .fn').forEach(el => {
                        const authorName = el.textContent.trim();
                        if (authorName && !el.parentNode.querySelector('.badge')) {
                            const count = authorCommentCounts[authorName];
                            const badge = getReputationBadge(count);
                            if (badge) {
                                const badgeEl = document.createElement('span');
                                badgeEl.className = `badge ${badge.class} ml-2`;
                                badgeEl.textContent = badge.name;
                                badgeEl.title = `${count} comments`;
                                el.parentNode.appendChild(badgeEl);
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error initializing reputation system:', error);
                }
            }

            function getReputationBadge(count) {
                if (!count) return null;
                // Anda bisa menyesuaikan ambang batas ini
                if (count >= 100) return { name: 'Gold', class: 'badge-gold' };
                if (count >= 50) return { name: 'Silver', class: 'badge-silver' };
                if (count >= 10) return { name: 'Bronze', class: 'badge-bronze' };
                return null;
            }


            // --- Best Answer Feature --- (and its helper functions)
            function initializeBestAnswerFeature() {
                const postContainer = document.querySelector('[data-post-id]');
                if (!postContainer) return; // Hanya berjalan di halaman postingan

                const postId = postContainer.getAttribute('data-post-id');
                const storageKey = `bestAnswer-${postId}`;
                const isBlogAdmin = document.querySelector('.item-control.blog-admin') !== null;

                function updateBestAnswerDisplay() {
                    const bestAnswerId = localStorage.getItem(storageKey);

                    document.querySelectorAll('.comment.best-answer').forEach(el => el.classList.remove('best-answer'));

                    if (bestAnswerId) {
                        const bestAnswerEl = document.getElementById(bestAnswerId);
                        if (bestAnswerEl) {
                            bestAnswerEl.classList.add('best-answer');
                        }
                    }
                }

                function handleMarkAsBest(event) {
                    const commentEl = event.target.closest('.comment');
                    if (!commentEl) return;

                    const currentBestId = localStorage.getItem(storageKey);
                    const newBestId = commentEl.id;

                    if (currentBestId === newBestId) {
                        localStorage.removeItem(storageKey); // Batalkan jika diklik lagi
                    } else {
                        localStorage.setItem(storageKey, newBestId);
                    }
                    
                    updateBestAnswerDisplay();
                    updateActionButtons();
                }
                
                function updateActionButtons() {
                    if (!isBlogAdmin) return;
                    const bestAnswerId = localStorage.getItem(storageKey);
                    document.querySelectorAll('.mark-best-answer-btn').forEach(btn => {
                        const commentEl = btn.closest('.comment');
                        if (commentEl && commentEl.id === bestAnswerId) {
                            btn.textContent = '✓ Jawaban Terbaik';
                            btn.title = 'Klik untuk batal menandai';
                        } else {
                            btn.textContent = 'Tandai sebagai Terbaik';
                            btn.title = 'Tandai komentar ini sebagai jawaban terbaik';
                        }
                    });
                }

                function addActionButton(commentEl) {
                    if (!isBlogAdmin || commentEl.querySelector('.mark-best-answer-btn')) return;
                    
                    const actionsContainer = commentEl.querySelector('.comment-actions');
                    if (actionsContainer) {
                        const button = document.createElement('button');
                        button.className = 'mark-best-answer-btn';
                        button.addEventListener('click', handleMarkAsBest);
                        actionsContainer.appendChild(button);
                    }
                }

                // Gunakan MutationObserver untuk menangani komentar yang dimuat secara dinamis
                const commentsContainer = document.getElementById('comment-holder');
                if (commentsContainer) {
                    const observer = new MutationObserver((mutationsList) => {
                        for (const mutation of mutationsList) {
                            if (mutation.type === 'childList') {
                                mutation.addedNodes.forEach(node => {
                                    if (node.nodeType === 1 && node.classList.contains('comment')) {
                                        addActionButton(node);
                                    }
                                });
                            }
                        }
                        updateActionButtons();
                    });
                    observer.observe(commentsContainer, { childList: true, subtree: true });
                }

                document.querySelectorAll('#comments .comment').forEach(addActionButton);
                updateBestAnswerDisplay();
                updateActionButtons();
            }

            // --- Comment Like Feature --- (and its helper functions)
            function initializeLikeButtonFeature() {
                const postContainer = document.querySelector('[data-post-id]');
                if (!postContainer) return; // Only run on post pages

                const postId = postContainer.getAttribute('data-post-id');
                const storageKey = `likedComments-${postId}`;

                function getLikedComments() {
                    const liked = localStorage.getItem(storageKey);
                    return liked ? JSON.parse(liked) : [];
                }

                function saveLikedComments(liked) {
                    localStorage.setItem(storageKey, JSON.stringify(liked));
                }

                function handleLikeClick(event) {
                    const button = event.currentTarget;
                    const commentEl = button.closest('.comment');
                    if (!commentEl) return;

                    const commentId = commentEl.id;
                    let likedComments = getLikedComments();

                    if (likedComments.includes(commentId)) {
                        likedComments = likedComments.filter(id => id !== commentId);
                        button.classList.remove('liked');
                        button.querySelector('i').classList.replace('fas', 'far');
                    } else {
                        likedComments.push(commentId);
                        button.classList.add('liked');
                        button.querySelector('i').classList.replace('far', 'fas');
                    }
                    saveLikedComments(likedComments);
                }

                function addLikeButton(commentEl) {
                    if (commentEl.querySelector('.like-btn')) return;

                    const actionsContainer = commentEl.querySelector('.comment-actions');
                    if (actionsContainer) {
                        const likedComments = getLikedComments();
                        const isLiked = likedComments.includes(commentEl.id);
                        const iconClass = isLiked ? 'fas' : 'far';

                        const button = document.createElement('button');
                        button.className = 'like-btn';
                        if (isLiked) button.classList.add('liked');
                        
                        button.innerHTML = `<i class="${iconClass} fa-thumbs-up mr-1"></i> Like`;
                        button.title = 'Like this comment';
                        button.addEventListener('click', handleLikeClick);
                        actionsContainer.appendChild(button);
                    }
                }

                // Gunakan MutationObserver untuk menangani komentar yang dimuat secara dinamis
                const commentsContainer = document.getElementById('comment-holder');
                if (commentsContainer) {
                    const observer = new MutationObserver(mutations => {
                        for (const mutation of mutations) {
                            if (mutation.type === 'childList') {
                                mutation.addedNodes.forEach(node => {
                                    if (node.nodeType !== 1) return;
                                    if (node.classList.contains('comment')) {
                                        addLikeButton(node);
                                    }
                                    node.querySelectorAll('.comment').forEach(addLikeButton);
                                });
                            }
                        }
                    });
                    observer.observe(commentsContainer, { childList: true, subtree: true });
                }
                document.querySelectorAll('#comments .comment').forEach(addLikeButton);
            }

            // --- Simple Notification System --- (and its helper functions)
            function initializeNotificationSystem() {
                const bell = document.getElementById('notification-bell');
                const countBadge = document.getElementById('notification-count');
                const dropdown = document.getElementById('notification-dropdown');
                const notificationList = document.getElementById('notification-list');
                const noNotificationsMessage = document.getElementById('no-notifications');

                if (!bell || !countBadge || !dropdown || !notificationList) return;

                const lastSeenTimestampKey = 'lastSeenPostTimestamp';
                let newestTimestampToStore = null;

                async function checkNotifications() {
                    try {
                        const response = await fetch('/feeds/posts/default?alt=json&max-results=5');
                        if (!response.ok) return;

                        const data = await response.json();
                        const posts = data.feed.entry || [];
                        if (posts.length === 0) return;

                        const lastSeenTimestamp = localStorage.getItem(lastSeenTimestampKey) || '1970-01-01T00:00:00.000Z';
                        const newPosts = posts.filter(post => new Date(post.published.$t) > new Date(lastSeenTimestamp));

                        if (newPosts.length > 0) {
                            newestTimestampToStore = newPosts[0].published.$t;

                            countBadge.textContent = newPosts.length;
                            countBadge.classList.remove('hidden');
                            noNotificationsMessage.classList.add('hidden');

                            notificationList.innerHTML = '';
                            newPosts.forEach(post => {
                                const postUrl = (post.link.find(link => link.rel === 'alternate') || {}).href;
                                const postTitle = post.title.$t;
                                const item = document.createElement('a');
                                item.href = postUrl;
                                item.className = 'block p-4 text-sm hover:bg-gray-100 notification-item';
                                item.innerHTML = `<p class="font-semibold text-gray-800">${postTitle}</p><p class="text-xs text-gray-500">A new thread has been posted.</p>`;
                                notificationList.appendChild(item);
                            });
                        }
                    } catch (error) {
                        console.error('Error checking notifications:', error);
                    }
                }

                bell.addEventListener('click', (e) => {
                    e.stopPropagation();
                    dropdown.classList.toggle('hidden');

                    if (newestTimestampToStore) {
                        localStorage.setItem(lastSeenTimestampKey, newestTimestampToStore);
                        countBadge.classList.add('hidden');
                        newestTimestampToStore = null;
                    }
                });

                document.addEventListener('click', (e) => {
                    if (!dropdown.contains(e.target) && !bell.contains(e.target)) {
                        dropdown.classList.add('hidden');
                    }
                });

                checkNotifications();
            }

            // --- Statistics Page Feature --- (and its helper functions)
            async function initializeStatisticsPage() {
                const statsContainer = document.getElementById('stats-page-container');
                if (!statsContainer) return;

                const activeUsersList = document.getElementById('active-users-list');
                const popularThreadsList = document.getElementById('popular-threads-list');
                const usersLoader = document.getElementById('active-users-loader');
                const threadsLoader = document.getElementById('popular-threads-loader');

                try {
                    const [commentsRes, postsRes] = await Promise.all([
                        fetch('/feeds/comments/default?alt=json&max-results=500'),
                        fetch('/feeds/posts/default?alt=json&max-results=50&orderby=updated')
                    ]);

                    if (!commentsRes.ok || !postsRes.ok) throw new Error('Failed to fetch stats data');

                    const commentsData = await commentsRes.json();
                    const postsData = await postsRes.json();

                    // Process and render active users
                    const authors = {};
                    const comments = commentsData.feed.entry || [];
                    comments.forEach(comment => {
                        const authorName = comment.author[0].name.$t;
                        if (authorName && authorName !== 'Anonymous') {
                            if (!authors[authorName]) {
                                const avatar = (comment.author[0]['gd$image'] ? comment.author[0]['gd$image'].src : 'https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4j-l_aM9GzVw5bFxy6hvLFmOaqH0TCTHweoQ5E2d4gtAon4IhJgifpLJUHiyjPTa9Wim_Uu8DsGeBTmDXHAWCWX0gIrk_3sUxor-Ra1D70c6OiDRmpVYKVNe-9DcNDYXcvBeif40YD_mPvZF35ayvDU5TPZSB5sztoLNBFkKj6Yk4v5_NalP41sct_Rw/s48-c/no_image.webp').replace('/s35-c/', '/s48-c/');
                                authors[authorName] = { count: 0, avatar: avatar };
                            }
                            authors[authorName].count++;
                        }
                    });

                    const sortedAuthors = Object.entries(authors).map(([name, data]) => ({ name, ...data })).sort((a, b) => b.count - a.count).slice(0, 10);

                    if (sortedAuthors.length > 0) {
                        const maxCount = sortedAuthors[0].count;
                        activeUsersList.innerHTML = sortedAuthors.map(author => `
                            <li><div class="stats-item">
                                <img src="${author.avatar}" alt="${author.name}" class="user-avatar-stat"/>
                                <div class="flex-grow">
                                    <div class="flex justify-between items-center">
                                        <span class="font-medium">${author.name}</span>
                                        <span class="text-sm text-gray-500">${author.count} komentar</span>
                                    </div>
                                    <div class="progress-bar-container"><div class="progress-bar" style="width: ${(author.count / maxCount) * 100}%"></div></div>
                                </div>
                            </div></li>`).join('');
                    } else {
                        activeUsersList.innerHTML = '<li class="text-center text-gray-500 p-4">Belum ada data anggota aktif.</li>';
                    }
                    usersLoader.style.display = 'none';

                    // Process and render popular threads
                    const posts = postsData.feed.entry || [];
                    const sortedPosts = posts.sort((a, b) => (b['thr$total']?.$t || 0) - (a['thr$total']?.$t || 0)).slice(0, 10);

                    if (sortedPosts.length > 0) {
                        popularThreadsList.innerHTML = sortedPosts.map(post => {
                            const url = (post.link.find(link => link.rel === 'alternate') || {}).href;
                            const title = post.title.$t;
                            const commentCount = post['thr$total']?.$t || 0;
                            return `
                                <li><div class="stats-item">
                                    <div class="flex-grow">
                                        <a href="${url}" class="font-medium hover:text-blue-600 transition-colors">${title}</a>
                                        <p class="text-sm text-gray-500">${commentCount} balasan</p>
                                    </div>
                                    <span class="text-lg font-bold text-blue-600">${commentCount}</span>
                                </div></li>`;
                        }).join('');
                    } else {
                        popularThreadsList.innerHTML = '<li class="text-center text-gray-500 p-4">Belum ada topik populer.</li>';
                    }
                    threadsLoader.style.display = 'none';

                } catch (error) {
                    console.error("Error initializing statistics page:", error);
                    usersLoader.innerHTML = 'Gagal memuat statistik.';
                    threadsLoader.style.display = 'none';
                }
            }

            // --- NEW: AI-Powered Similar Threads ---
            async function initializeSimilarThreads() {
                const container = document.getElementById('similar-threads-container');
                const currentPostTitleEl = document.querySelector('h1.text-3xl');
                const currentPostBodyEl = document.querySelector('.post-body.entry-content');

                if (!container || !currentPostTitleEl || !currentPostBodyEl) return;

                container.innerHTML = '<div class="text-center p-4"><i class="fas fa-spinner fa-spin mr-2"></i>Finding related discussions...</div>';
                container.style.display = 'block';

                try {
                    const response = await fetch('/feeds/posts/summary?alt=json&max-results=150');
                    if (!response.ok) throw new Error('Failed to fetch posts');
                    const data = await response.json();
                    const allPosts = data.feed.entry || [];

                    const currentPostTitle = currentPostTitleEl.textContent.trim();
                    const postSnippet = currentPostBodyEl.textContent.trim().substring(0, 500);

                    const otherPosts = allPosts
                        .map(post => ({
                            title: post.title.$t,
                            url: (post.link.find(link => link.rel === 'alternate') || {}).href
                        }))
                        .filter(post => post.title !== currentPostTitle && post.url);

                    if (otherPosts.length < 3) {
                        container.style.display = 'none';
                        return;
                    }

                    const otherPostTitles = otherPosts.map(p => p.title);

                    const { GoogleGenAI, Type } = await import('https://esm.sh/@google/genai');
                    const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

                    const prompt = `You are a content recommender for a forum. Based on the current thread, find the 3 most relevant threads from the provided list.

                    Current Thread Title: "${currentPostTitle}"
                    Current Thread Snippet: "${postSnippet}"

                    List of all other thread titles:
                    ${JSON.stringify(otherPostTitles)}

                    Return your answer ONLY as a JSON array of strings, where each string is the exact title of one of the most relevant threads. Example: ["Title 1", "Title 2", "Title 3"]`;

                    const result = await ai.models.generateContent({
                        model: 'gemini-2.5-flash',
                        contents: prompt,
                         config: {
                             responseMimeType: "application/json",
                             responseSchema: {
                                type: Type.ARRAY,
                                items: { type: Type.STRING }
                            }
                        }
                    });
                    
                    // FIX: Add robust JSON parsing to prevent runtime errors from empty or malformed API responses.
                    let recommendedTitles = [];
                    const responseText = result.text?.trim();
                    if (responseText) {
                        try {
                            recommendedTitles = JSON.parse(responseText);
                        } catch (e) {
                            console.error("Failed to parse AI response as JSON:", e, "Response was:", result.text);
                        }
                    }

                    if (!recommendedTitles || recommendedTitles.length === 0) {
                        container.style.display = 'none';
                        return;
                    }

                    const recommendedPosts = recommendedTitles
                        .map(title => otherPosts.find(post => post.title === title))
                        .filter(Boolean);

                    if (recommendedPosts.length === 0) {
                        container.style.display = 'none';
                        return;
                    }

                    let html = '<div class="flex items-center mb-4"><div class="h-8 w-1.5 bg-purple-500 rounded-full mr-3"></div><h3 class="text-xl font-bold text-gray-800 dark:text-gray-200">Related Discussions</h3></div>';
                    html += '<ul class="space-y-3">';
                    recommendedPosts.forEach(post => {
                        html += `<li><a href="${post.url}" class="text-blue-600 dark:text-blue-400 hover:underline flex items-start"><i class="fas fa-link fa-xs mt-1 mr-2 text-gray-400"></i><span>${post.title}</span></a></li>`;
                    });
                    html += '</ul>';

                    container.innerHTML = html;

                } catch (error) {
                    console.error('Error fetching similar threads:', error);
                    container.style.display = 'none';
                }
            }

            // --- NEW: Post Image Lazy Loading ---
            function optimizePostImages() {
                // This function runs only on post pages to optimize images inside the article.
                const postBody = document.querySelector('.post-body.entry-content');
                if (!postBody) return;

                const images = postBody.querySelectorAll('img');
                images.forEach(img => {
                    img.setAttribute('loading', 'lazy');
                    img.setAttribute('decoding', 'async');
                });
            }

            // --- Initialize all features ---
            if (document.body.classList.contains('item-page')) {
                initializeNewThreadButton();
                initializeBestAnswerFeature();
                initializeLikeButtonFeature();
                initializeSimilarThreads(); // Call the new feature
                optimizePostImages(); // Optimize images on post pages
            } else {
                initializeNewThreadButton();
            }

            initializeLabelFilter();
            initializeReputationSystem();
            initializeNotificationSystem();
            initializeStatisticsPage();
        });
        
    /*]]>*/
    </script>
</body>
</html>